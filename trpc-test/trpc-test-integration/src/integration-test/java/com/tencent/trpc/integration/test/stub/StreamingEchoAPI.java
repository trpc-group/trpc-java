/*
 * Tencent is pleased to support the open source community by making tRPC available.
 *
 * Copyright (C) 2023 Tencent.
 * All rights reserved.
 *
 * If you have downloaded a copy of the tRPC source code from Tencent,
 * please note that tRPC source code is licensed under the Apache 2.0 License,
 * A copy of the Apache 2.0 License can be found in the LICENSE file.
 */

package com.tencent.trpc.integration.test.stub;

import com.tencent.trpc.core.rpc.RpcContext;
import com.tencent.trpc.core.rpc.anno.TRpcMethod;
import com.tencent.trpc.core.rpc.anno.TRpcService;
import com.tencent.trpc.integration.test.stub.EchoService.EchoRequest;
import com.tencent.trpc.integration.test.stub.EchoService.EchoResponse;
import org.reactivestreams.Publisher;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

/**
 * Generated by trpc-java-codegen
 */
@TRpcService(name = "com.tencent.trpc.integration.test.StreamingEcho")
public interface StreamingEchoAPI {

    /**
     * clientStreamEcho
     *
     * @param context context
     * @param request request
     * @return {@link EchoResponse}
     */
    @TRpcMethod(name = "clientStreamEcho")
    Mono<EchoResponse> clientStreamEcho(RpcContext context, Publisher<EchoRequest> request);

    /**
     * serverStreamEcho
     *
     * @param context context
     * @param request request
     * @return {@link EchoResponse}
     */
    @TRpcMethod(name = "serverStreamEcho")
    Flux<EchoResponse> serverStreamEcho(RpcContext context, EchoRequest request);

    /**
     * mutualStreamEcho
     *
     * @param context context
     * @param request request
     * @return {@link EchoResponse}
     */
    @TRpcMethod(name = "mutualStreamEcho")
    Flux<EchoResponse> mutualStreamEcho(RpcContext context, Publisher<EchoRequest> request);
}