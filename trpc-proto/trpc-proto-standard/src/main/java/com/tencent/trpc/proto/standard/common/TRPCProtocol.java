/*
 * Tencent is pleased to support the open source community by making tRPC available.
 *
 * Copyright (C) 2023 Tencent.
 * All rights reserved.
 *
 * If you have downloaded a copy of the tRPC source code from Tencent,
 * please note that tRPC source code is licensed under the Apache 2.0 License,
 * A copy of the Apache 2.0 License can be found in the LICENSE file.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: trpc.proto

package com.tencent.trpc.proto.standard.common;

public final class TRPCProtocol {
  private TRPCProtocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * The magic value of trpc protocol
   * </pre>
   *
   * Protobuf enum {@code trpc.TrpcMagic}
   */
  public enum TrpcMagic
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * trpc does not use this value, it is used by the pb gen-code tool
     * </pre>
     *
     * <code>TRPC_DEFAULT_NONE = 0;</code>
     */
    TRPC_DEFAULT_NONE(0),
    /**
     * <pre>
     * The magic value used by trpc protocol
     * </pre>
     *
     * <code>TRPC_MAGIC_VALUE = 2352;</code>
     */
    TRPC_MAGIC_VALUE(2352),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * trpc does not use this value, it is used by the pb gen-code tool
     * </pre>
     *
     * <code>TRPC_DEFAULT_NONE = 0;</code>
     */
    public static final int TRPC_DEFAULT_NONE_VALUE = 0;
    /**
     * <pre>
     * The magic value used by trpc protocol
     * </pre>
     *
     * <code>TRPC_MAGIC_VALUE = 2352;</code>
     */
    public static final int TRPC_MAGIC_VALUE_VALUE = 2352;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TrpcMagic valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TrpcMagic forNumber(int value) {
      switch (value) {
        case 0: return TRPC_DEFAULT_NONE;
        case 2352: return TRPC_MAGIC_VALUE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TrpcMagic>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TrpcMagic> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TrpcMagic>() {
            public TrpcMagic findValueByNumber(int number) {
              return TrpcMagic.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.tencent.trpc.proto.standard.common.TRPCProtocol.getDescriptor().getEnumTypes().get(0);
    }

    private static final TrpcMagic[] VALUES = values();

    public static TrpcMagic valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TrpcMagic(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:trpc.TrpcMagic)
  }

  /**
   * <pre>
   * The data frame type of the trpc protocol packet
   * Two types are currently supported:
   * 1. The data frame type for unary(one-response-one-response)
   * 2. The data frame type for stream
   * </pre>
   *
   * Protobuf enum {@code trpc.TrpcDataFrameType}
   */
  public enum TrpcDataFrameType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TRPC_UNARY_FRAME = 0;</code>
     */
    TRPC_UNARY_FRAME(0),
    /**
     * <code>TRPC_STREAM_FRAME = 1;</code>
     */
    TRPC_STREAM_FRAME(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>TRPC_UNARY_FRAME = 0;</code>
     */
    public static final int TRPC_UNARY_FRAME_VALUE = 0;
    /**
     * <code>TRPC_STREAM_FRAME = 1;</code>
     */
    public static final int TRPC_STREAM_FRAME_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TrpcDataFrameType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TrpcDataFrameType forNumber(int value) {
      switch (value) {
        case 0: return TRPC_UNARY_FRAME;
        case 1: return TRPC_STREAM_FRAME;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TrpcDataFrameType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TrpcDataFrameType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TrpcDataFrameType>() {
            public TrpcDataFrameType findValueByNumber(int number) {
              return TrpcDataFrameType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.tencent.trpc.proto.standard.common.TRPCProtocol.getDescriptor().getEnumTypes().get(1);
    }

    private static final TrpcDataFrameType[] VALUES = values();

    public static TrpcDataFrameType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TrpcDataFrameType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:trpc.TrpcDataFrameType)
  }

  /**
   * <pre>
   * The specific frame type of trpc streaming data frame
   * Four types are currently supported:
   * `INIT` frame: FIXHEADER + TrpcStreamInitMeta
   * `DATA` frame: FIXHEADER + body (business serialized data)
   * `FEEDBACK` frame: FIXHEADER + TrpcStreamFeedBackMeta (triggered strategy: high/low water level and timer)
   * `CLOSE` frame: FIXHEADER + TrpcStreamCloseMeta
   * </pre>
   *
   * Protobuf enum {@code trpc.TrpcStreamFrameType}
   */
  public enum TrpcStreamFrameType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TRPC_UNARY = 0;</code>
     */
    TRPC_UNARY(0),
    /**
     * <code>TRPC_STREAM_FRAME_INIT = 1;</code>
     */
    TRPC_STREAM_FRAME_INIT(1),
    /**
     * <code>TRPC_STREAM_FRAME_DATA = 2;</code>
     */
    TRPC_STREAM_FRAME_DATA(2),
    /**
     * <code>TRPC_STREAM_FRAME_FEEDBACK = 3;</code>
     */
    TRPC_STREAM_FRAME_FEEDBACK(3),
    /**
     * <code>TRPC_STREAM_FRAME_CLOSE = 4;</code>
     */
    TRPC_STREAM_FRAME_CLOSE(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>TRPC_UNARY = 0;</code>
     */
    public static final int TRPC_UNARY_VALUE = 0;
    /**
     * <code>TRPC_STREAM_FRAME_INIT = 1;</code>
     */
    public static final int TRPC_STREAM_FRAME_INIT_VALUE = 1;
    /**
     * <code>TRPC_STREAM_FRAME_DATA = 2;</code>
     */
    public static final int TRPC_STREAM_FRAME_DATA_VALUE = 2;
    /**
     * <code>TRPC_STREAM_FRAME_FEEDBACK = 3;</code>
     */
    public static final int TRPC_STREAM_FRAME_FEEDBACK_VALUE = 3;
    /**
     * <code>TRPC_STREAM_FRAME_CLOSE = 4;</code>
     */
    public static final int TRPC_STREAM_FRAME_CLOSE_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TrpcStreamFrameType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TrpcStreamFrameType forNumber(int value) {
      switch (value) {
        case 0: return TRPC_UNARY;
        case 1: return TRPC_STREAM_FRAME_INIT;
        case 2: return TRPC_STREAM_FRAME_DATA;
        case 3: return TRPC_STREAM_FRAME_FEEDBACK;
        case 4: return TRPC_STREAM_FRAME_CLOSE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TrpcStreamFrameType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TrpcStreamFrameType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TrpcStreamFrameType>() {
            public TrpcStreamFrameType findValueByNumber(int number) {
              return TrpcStreamFrameType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.tencent.trpc.proto.standard.common.TRPCProtocol.getDescriptor().getEnumTypes().get(2);
    }

    private static final TrpcStreamFrameType[] VALUES = values();

    public static TrpcStreamFrameType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TrpcStreamFrameType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:trpc.TrpcStreamFrameType)
  }

  /**
   * <pre>
   * The closed type of trpc stream protocol
   * </pre>
   *
   * Protobuf enum {@code trpc.TrpcStreamCloseType}
   */
  public enum TrpcStreamCloseType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * normal closes unidirectional flow
     * </pre>
     *
     * <code>TRPC_STREAM_CLOSE = 0;</code>
     */
    TRPC_STREAM_CLOSE(0),
    /**
     * <pre>
     * Exception closes bidirectional stream
     * </pre>
     *
     * <code>TRPC_STREAM_RESET = 1;</code>
     */
    TRPC_STREAM_RESET(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * normal closes unidirectional flow
     * </pre>
     *
     * <code>TRPC_STREAM_CLOSE = 0;</code>
     */
    public static final int TRPC_STREAM_CLOSE_VALUE = 0;
    /**
     * <pre>
     * Exception closes bidirectional stream
     * </pre>
     *
     * <code>TRPC_STREAM_RESET = 1;</code>
     */
    public static final int TRPC_STREAM_RESET_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TrpcStreamCloseType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TrpcStreamCloseType forNumber(int value) {
      switch (value) {
        case 0: return TRPC_STREAM_CLOSE;
        case 1: return TRPC_STREAM_RESET;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TrpcStreamCloseType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TrpcStreamCloseType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TrpcStreamCloseType>() {
            public TrpcStreamCloseType findValueByNumber(int number) {
              return TrpcStreamCloseType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.tencent.trpc.proto.standard.common.TRPCProtocol.getDescriptor().getEnumTypes().get(3);
    }

    private static final TrpcStreamCloseType[] VALUES = values();

    public static TrpcStreamCloseType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TrpcStreamCloseType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:trpc.TrpcStreamCloseType)
  }

  /**
   * <pre>
   * The version of trpc protocol
   * </pre>
   *
   * Protobuf enum {@code trpc.TrpcProtoVersion}
   */
  public enum TrpcProtoVersion
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TRPC_PROTO_V1 = 0;</code>
     */
    TRPC_PROTO_V1(0),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>TRPC_PROTO_V1 = 0;</code>
     */
    public static final int TRPC_PROTO_V1_VALUE = 0;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TrpcProtoVersion valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TrpcProtoVersion forNumber(int value) {
      switch (value) {
        case 0: return TRPC_PROTO_V1;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TrpcProtoVersion>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TrpcProtoVersion> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TrpcProtoVersion>() {
            public TrpcProtoVersion findValueByNumber(int number) {
              return TrpcProtoVersion.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.tencent.trpc.proto.standard.common.TRPCProtocol.getDescriptor().getEnumTypes().get(4);
    }

    private static final TrpcProtoVersion[] VALUES = values();

    public static TrpcProtoVersion valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TrpcProtoVersion(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:trpc.TrpcProtoVersion)
  }

  /**
   * <pre>
   * The call type of trpc protocol
   * </pre>
   *
   * Protobuf enum {@code trpc.TrpcCallType}
   */
  public enum TrpcCallType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Unary(one-response-one-response), include sync and async
     * </pre>
     *
     * <code>TRPC_UNARY_CALL = 0;</code>
     */
    TRPC_UNARY_CALL(0),
    /**
     * <pre>
     * Oneway
     * </pre>
     *
     * <code>TRPC_ONEWAY_CALL = 1;</code>
     */
    TRPC_ONEWAY_CALL(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Unary(one-response-one-response), include sync and async
     * </pre>
     *
     * <code>TRPC_UNARY_CALL = 0;</code>
     */
    public static final int TRPC_UNARY_CALL_VALUE = 0;
    /**
     * <pre>
     * Oneway
     * </pre>
     *
     * <code>TRPC_ONEWAY_CALL = 1;</code>
     */
    public static final int TRPC_ONEWAY_CALL_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TrpcCallType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TrpcCallType forNumber(int value) {
      switch (value) {
        case 0: return TRPC_UNARY_CALL;
        case 1: return TRPC_ONEWAY_CALL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TrpcCallType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TrpcCallType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TrpcCallType>() {
            public TrpcCallType findValueByNumber(int number) {
              return TrpcCallType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.tencent.trpc.proto.standard.common.TRPCProtocol.getDescriptor().getEnumTypes().get(5);
    }

    private static final TrpcCallType[] VALUES = values();

    public static TrpcCallType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TrpcCallType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:trpc.TrpcCallType)
  }

  /**
   * <pre>
   * The message type of the transparent transmission information
   * </pre>
   *
   * Protobuf enum {@code trpc.TrpcMessageType}
   */
  public enum TrpcMessageType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * trpc does not use this value, it is used by the pb gen-code tool
     * </pre>
     *
     * <code>TRPC_DEFAULT = 0;</code>
     */
    TRPC_DEFAULT(0),
    /**
     * <pre>
     * Dyeing message
     * </pre>
     *
     * <code>TRPC_DYEING_MESSAGE = 1;</code>
     */
    TRPC_DYEING_MESSAGE(1),
    /**
     * <pre>
     * Tracing message
     * </pre>
     *
     * <code>TRPC_TRACE_MESSAGE = 2;</code>
     */
    TRPC_TRACE_MESSAGE(2),
    /**
     * <pre>
     * Multi-Environment message
     * </pre>
     *
     * <code>TRPC_MULTI_ENV_MESSAGE = 4;</code>
     */
    TRPC_MULTI_ENV_MESSAGE(4),
    /**
     * <pre>
     * grid message
     * </pre>
     *
     * <code>TRPC_GRID_MESSAGE = 8;</code>
     */
    TRPC_GRID_MESSAGE(8),
    /**
     * <pre>
     * SetNmae message
     * </pre>
     *
     * <code>TRPC_SETNAME_MESSAGE = 16;</code>
     */
    TRPC_SETNAME_MESSAGE(16),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * trpc does not use this value, it is used by the pb gen-code tool
     * </pre>
     *
     * <code>TRPC_DEFAULT = 0;</code>
     */
    public static final int TRPC_DEFAULT_VALUE = 0;
    /**
     * <pre>
     * Dyeing message
     * </pre>
     *
     * <code>TRPC_DYEING_MESSAGE = 1;</code>
     */
    public static final int TRPC_DYEING_MESSAGE_VALUE = 1;
    /**
     * <pre>
     * Tracing message
     * </pre>
     *
     * <code>TRPC_TRACE_MESSAGE = 2;</code>
     */
    public static final int TRPC_TRACE_MESSAGE_VALUE = 2;
    /**
     * <pre>
     * Multi-Environment message
     * </pre>
     *
     * <code>TRPC_MULTI_ENV_MESSAGE = 4;</code>
     */
    public static final int TRPC_MULTI_ENV_MESSAGE_VALUE = 4;
    /**
     * <pre>
     * grid message
     * </pre>
     *
     * <code>TRPC_GRID_MESSAGE = 8;</code>
     */
    public static final int TRPC_GRID_MESSAGE_VALUE = 8;
    /**
     * <pre>
     * SetNmae message
     * </pre>
     *
     * <code>TRPC_SETNAME_MESSAGE = 16;</code>
     */
    public static final int TRPC_SETNAME_MESSAGE_VALUE = 16;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TrpcMessageType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TrpcMessageType forNumber(int value) {
      switch (value) {
        case 0: return TRPC_DEFAULT;
        case 1: return TRPC_DYEING_MESSAGE;
        case 2: return TRPC_TRACE_MESSAGE;
        case 4: return TRPC_MULTI_ENV_MESSAGE;
        case 8: return TRPC_GRID_MESSAGE;
        case 16: return TRPC_SETNAME_MESSAGE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TrpcMessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TrpcMessageType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TrpcMessageType>() {
            public TrpcMessageType findValueByNumber(int number) {
              return TrpcMessageType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.tencent.trpc.proto.standard.common.TRPCProtocol.getDescriptor().getEnumTypes().get(6);
    }

    private static final TrpcMessageType[] VALUES = values();

    public static TrpcMessageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TrpcMessageType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:trpc.TrpcMessageType)
  }

  /**
   * <pre>
   * The encoding type of the body data in the trpc protocol
   * Use proto by default
   * At present, it is agreed that the value in the range of 0-127 is used by the framework
   * </pre>
   *
   * Protobuf enum {@code trpc.TrpcContentEncodeType}
   */
  public enum TrpcContentEncodeType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * pb
     * </pre>
     *
     * <code>TRPC_PROTO_ENCODE = 0;</code>
     */
    TRPC_PROTO_ENCODE(0),
    /**
     * <pre>
     * jce
     * </pre>
     *
     * <code>TRPC_JCE_ENCODE = 1;</code>
     */
    TRPC_JCE_ENCODE(1),
    /**
     * <pre>
     * json
     * </pre>
     *
     * <code>TRPC_JSON_ENCODE = 2;</code>
     */
    TRPC_JSON_ENCODE(2),
    /**
     * <pre>
     * flatbuffer
     * </pre>
     *
     * <code>TRPC_FLATBUFFER_ENCODE = 3;</code>
     */
    TRPC_FLATBUFFER_ENCODE(3),
    /**
     * <pre>
     * text or binary
     * </pre>
     *
     * <code>TRPC_NOOP_ENCODE = 4;</code>
     */
    TRPC_NOOP_ENCODE(4),
    /**
     * <pre>
     * xml
     * </pre>
     *
     * <code>TRPC_XML_ENCODE = 5;</code>
     */
    TRPC_XML_ENCODE(5),
    /**
     * <pre>
     * thrift
     * </pre>
     *
     * <code>TRPC_THRIFT_ENCODE = 6;</code>
     */
    TRPC_THRIFT_ENCODE(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * pb
     * </pre>
     *
     * <code>TRPC_PROTO_ENCODE = 0;</code>
     */
    public static final int TRPC_PROTO_ENCODE_VALUE = 0;
    /**
     * <pre>
     * jce
     * </pre>
     *
     * <code>TRPC_JCE_ENCODE = 1;</code>
     */
    public static final int TRPC_JCE_ENCODE_VALUE = 1;
    /**
     * <pre>
     * json
     * </pre>
     *
     * <code>TRPC_JSON_ENCODE = 2;</code>
     */
    public static final int TRPC_JSON_ENCODE_VALUE = 2;
    /**
     * <pre>
     * flatbuffer
     * </pre>
     *
     * <code>TRPC_FLATBUFFER_ENCODE = 3;</code>
     */
    public static final int TRPC_FLATBUFFER_ENCODE_VALUE = 3;
    /**
     * <pre>
     * text or binary
     * </pre>
     *
     * <code>TRPC_NOOP_ENCODE = 4;</code>
     */
    public static final int TRPC_NOOP_ENCODE_VALUE = 4;
    /**
     * <pre>
     * xml
     * </pre>
     *
     * <code>TRPC_XML_ENCODE = 5;</code>
     */
    public static final int TRPC_XML_ENCODE_VALUE = 5;
    /**
     * <pre>
     * thrift
     * </pre>
     *
     * <code>TRPC_THRIFT_ENCODE = 6;</code>
     */
    public static final int TRPC_THRIFT_ENCODE_VALUE = 6;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TrpcContentEncodeType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TrpcContentEncodeType forNumber(int value) {
      switch (value) {
        case 0: return TRPC_PROTO_ENCODE;
        case 1: return TRPC_JCE_ENCODE;
        case 2: return TRPC_JSON_ENCODE;
        case 3: return TRPC_FLATBUFFER_ENCODE;
        case 4: return TRPC_NOOP_ENCODE;
        case 5: return TRPC_XML_ENCODE;
        case 6: return TRPC_THRIFT_ENCODE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TrpcContentEncodeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TrpcContentEncodeType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TrpcContentEncodeType>() {
            public TrpcContentEncodeType findValueByNumber(int number) {
              return TrpcContentEncodeType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.tencent.trpc.proto.standard.common.TRPCProtocol.getDescriptor().getEnumTypes().get(7);
    }

    private static final TrpcContentEncodeType[] VALUES = values();

    public static TrpcContentEncodeType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TrpcContentEncodeType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:trpc.TrpcContentEncodeType)
  }

  /**
   * <pre>
   * The compressor type of the body data in the trpc protocol
   * No compression by default
   * </pre>
   *
   * Protobuf enum {@code trpc.TrpcCompressType}
   */
  public enum TrpcCompressType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * No compression
     * </pre>
     *
     * <code>TRPC_DEFAULT_COMPRESS = 0;</code>
     */
    TRPC_DEFAULT_COMPRESS(0),
    /**
     * <pre>
     * gzip
     * </pre>
     *
     * <code>TRPC_GZIP_COMPRESS = 1;</code>
     */
    TRPC_GZIP_COMPRESS(1),
    /**
     * <pre>
     * snappy(Deprecated)
     * please use `TRPC_SNAPPY_STREAM_COMPRESS`/`TRPC_SNAPPY_BLOCK_COMPRESS`,
     * Because trpc-go and trpc-cpp use stream and block modes respectively,
     * the two are not compatible, and cross-language calls will make mistakes
     * </pre>
     *
     * <code>TRPC_SNAPPY_COMPRESS = 2;</code>
     */
    TRPC_SNAPPY_COMPRESS(2),
    /**
     * <pre>
     * zlib
     * </pre>
     *
     * <code>TRPC_ZLIB_COMPRESS = 3;</code>
     */
    TRPC_ZLIB_COMPRESS(3),
    /**
     * <pre>
     * snappy stream
     * </pre>
     *
     * <code>TRPC_SNAPPY_STREAM_COMPRESS = 4;</code>
     */
    TRPC_SNAPPY_STREAM_COMPRESS(4),
    /**
     * <pre>
     * snappy block
     * </pre>
     *
     * <code>TRPC_SNAPPY_BLOCK_COMPRESS = 5;</code>
     */
    TRPC_SNAPPY_BLOCK_COMPRESS(5),
    /**
     * <pre>
     * lz4 frame
     * </pre>
     *
     * <code>TRPC_LZ4_FRAME_COMPRESS = 6;</code>
     */
    TRPC_LZ4_FRAME_COMPRESS(6),
    /**
     * <pre>
     * lz4 block
     * </pre>
     *
     * <code>TRPC_LZ4_BLOCK_COMPRESS = 7;</code>
     */
    TRPC_LZ4_BLOCK_COMPRESS(7),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * No compression
     * </pre>
     *
     * <code>TRPC_DEFAULT_COMPRESS = 0;</code>
     */
    public static final int TRPC_DEFAULT_COMPRESS_VALUE = 0;
    /**
     * <pre>
     * gzip
     * </pre>
     *
     * <code>TRPC_GZIP_COMPRESS = 1;</code>
     */
    public static final int TRPC_GZIP_COMPRESS_VALUE = 1;
    /**
     * <pre>
     * snappy(Deprecated)
     * please use `TRPC_SNAPPY_STREAM_COMPRESS`/`TRPC_SNAPPY_BLOCK_COMPRESS`,
     * Because trpc-go and trpc-cpp use stream and block modes respectively,
     * the two are not compatible, and cross-language calls will make mistakes
     * </pre>
     *
     * <code>TRPC_SNAPPY_COMPRESS = 2;</code>
     */
    public static final int TRPC_SNAPPY_COMPRESS_VALUE = 2;
    /**
     * <pre>
     * zlib
     * </pre>
     *
     * <code>TRPC_ZLIB_COMPRESS = 3;</code>
     */
    public static final int TRPC_ZLIB_COMPRESS_VALUE = 3;
    /**
     * <pre>
     * snappy stream
     * </pre>
     *
     * <code>TRPC_SNAPPY_STREAM_COMPRESS = 4;</code>
     */
    public static final int TRPC_SNAPPY_STREAM_COMPRESS_VALUE = 4;
    /**
     * <pre>
     * snappy block
     * </pre>
     *
     * <code>TRPC_SNAPPY_BLOCK_COMPRESS = 5;</code>
     */
    public static final int TRPC_SNAPPY_BLOCK_COMPRESS_VALUE = 5;
    /**
     * <pre>
     * lz4 frame
     * </pre>
     *
     * <code>TRPC_LZ4_FRAME_COMPRESS = 6;</code>
     */
    public static final int TRPC_LZ4_FRAME_COMPRESS_VALUE = 6;
    /**
     * <pre>
     * lz4 block
     * </pre>
     *
     * <code>TRPC_LZ4_BLOCK_COMPRESS = 7;</code>
     */
    public static final int TRPC_LZ4_BLOCK_COMPRESS_VALUE = 7;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TrpcCompressType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TrpcCompressType forNumber(int value) {
      switch (value) {
        case 0: return TRPC_DEFAULT_COMPRESS;
        case 1: return TRPC_GZIP_COMPRESS;
        case 2: return TRPC_SNAPPY_COMPRESS;
        case 3: return TRPC_ZLIB_COMPRESS;
        case 4: return TRPC_SNAPPY_STREAM_COMPRESS;
        case 5: return TRPC_SNAPPY_BLOCK_COMPRESS;
        case 6: return TRPC_LZ4_FRAME_COMPRESS;
        case 7: return TRPC_LZ4_BLOCK_COMPRESS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TrpcCompressType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TrpcCompressType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TrpcCompressType>() {
            public TrpcCompressType findValueByNumber(int number) {
              return TrpcCompressType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.tencent.trpc.proto.standard.common.TRPCProtocol.getDescriptor().getEnumTypes().get(8);
    }

    private static final TrpcCompressType[] VALUES = values();

    public static TrpcCompressType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TrpcCompressType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:trpc.TrpcCompressType)
  }

  /**
   * <pre>
   * 框架层接口调用的返回码定义
   * The return code definition of the framework layer interface call
   * </pre>
   *
   * Protobuf enum {@code trpc.TrpcRetCode}
   */
  public enum TrpcRetCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * success
     * </pre>
     *
     * <code>TRPC_INVOKE_SUCCESS = 0;</code>
     */
    TRPC_INVOKE_SUCCESS(0),
    /**
     * <pre>
     * server-side decode error
     * </pre>
     *
     * <code>TRPC_SERVER_DECODE_ERR = 1;</code>
     */
    TRPC_SERVER_DECODE_ERR(1),
    /**
     * <pre>
     * server-side encode error
     * </pre>
     *
     * <code>TRPC_SERVER_ENCODE_ERR = 2;</code>
     */
    TRPC_SERVER_ENCODE_ERR(2),
    /**
     * <pre>
     * the server-side does not have a corresponding service implementation
     * </pre>
     *
     * <code>TRPC_SERVER_NOSERVICE_ERR = 11;</code>
     */
    TRPC_SERVER_NOSERVICE_ERR(11),
    /**
     * <pre>
     * the server-side does not have a corresponding interface implementation
     * </pre>
     *
     * <code>TRPC_SERVER_NOFUNC_ERR = 12;</code>
     */
    TRPC_SERVER_NOFUNC_ERR(12),
    /**
     * <pre>
     * the request timed out on the server-side
     * </pre>
     *
     * <code>TRPC_SERVER_TIMEOUT_ERR = 21;</code>
     */
    TRPC_SERVER_TIMEOUT_ERR(21),
    /**
     * <pre>
     * the request is overloaded on the server-side and the request is discarded
     * </pre>
     *
     * <code>TRPC_SERVER_OVERLOAD_ERR = 22;</code>
     */
    TRPC_SERVER_OVERLOAD_ERR(22),
    /**
     * <pre>
     * the request is throttled on the server-side
     * </pre>
     *
     * <code>TRPC_SERVER_LIMITED_ERR = 23;</code>
     */
    TRPC_SERVER_LIMITED_ERR(23),
    /**
     * <pre>
     * The request is timed out on the server-side due to the full link timeout
     * </pre>
     *
     * <code>TRPC_SERVER_FULL_LINK_TIMEOUT_ERR = 24;</code>
     */
    TRPC_SERVER_FULL_LINK_TIMEOUT_ERR(24),
    /**
     * <pre>
     * server-side system error
     * </pre>
     *
     * <code>TRPC_SERVER_SYSTEM_ERR = 31;</code>
     */
    TRPC_SERVER_SYSTEM_ERR(31),
    /**
     * <pre>
     * the server-side request authentication failed error
     * </pre>
     *
     * <code>TRPC_SERVER_AUTH_ERR = 41;</code>
     */
    TRPC_SERVER_AUTH_ERR(41),
    /**
     * <pre>
     * the server-side request parameter automatic verification failed error
     * </pre>
     *
     * <code>TRPC_SERVER_VALIDATE_ERR = 51;</code>
     */
    TRPC_SERVER_VALIDATE_ERR(51),
    /**
     * <pre>
     * the request is timed out on the client-side
     * </pre>
     *
     * <code>TRPC_CLIENT_INVOKE_TIMEOUT_ERR = 101;</code>
     */
    TRPC_CLIENT_INVOKE_TIMEOUT_ERR(101),
    /**
     * <pre>
     * the request is timed out on the client-side due to the full link timeout
     * </pre>
     *
     * <code>TRPC_CLIENT_FULL_LINK_TIMEOUT_ERR = 102;</code>
     */
    TRPC_CLIENT_FULL_LINK_TIMEOUT_ERR(102),
    /**
     * <pre>
     * client-side connection error
     * </pre>
     *
     * <code>TRPC_CLIENT_CONNECT_ERR = 111;</code>
     */
    TRPC_CLIENT_CONNECT_ERR(111),
    /**
     * <pre>
     * client-side encode error
     * </pre>
     *
     * <code>TRPC_CLIENT_ENCODE_ERR = 121;</code>
     */
    TRPC_CLIENT_ENCODE_ERR(121),
    /**
     * <pre>
     * client-side decode error
     * </pre>
     *
     * <code>TRPC_CLIENT_DECODE_ERR = 122;</code>
     */
    TRPC_CLIENT_DECODE_ERR(122),
    /**
     * <pre>
     * the request is throttled on the client-side
     * </pre>
     *
     * <code>TRPC_CLIENT_LIMITED_ERR = 123;</code>
     */
    TRPC_CLIENT_LIMITED_ERR(123),
    /**
     * <pre>
     * The request is overloaded on the client-side and discarded
     * </pre>
     *
     * <code>TRPC_CLIENT_OVERLOAD_ERR = 124;</code>
     */
    TRPC_CLIENT_OVERLOAD_ERR(124),
    /**
     * <pre>
     * service routing error code
     * </pre>
     *
     * <code>TRPC_CLIENT_ROUTER_ERR = 131;</code>
     */
    TRPC_CLIENT_ROUTER_ERR(131),
    /**
     * <pre>
     * client-side network or connection error code
     * </pre>
     *
     * <code>TRPC_CLIENT_NETWORK_ERR = 141;</code>
     */
    TRPC_CLIENT_NETWORK_ERR(141),
    /**
     * <pre>
     * client-side response parameter automatic verification failed error
     * </pre>
     *
     * <code>TRPC_CLIENT_VALIDATE_ERR = 151;</code>
     */
    TRPC_CLIENT_VALIDATE_ERR(151),
    /**
     * <pre>
     * upstream actively disconnected, early cancellation request error code
     * </pre>
     *
     * <code>TRPC_CLIENT_CANCELED_ERR = 161;</code>
     */
    TRPC_CLIENT_CANCELED_ERR(161),
    /**
     * <pre>
     * client-side read data frame error
     * </pre>
     *
     * <code>TRPC_CLIENT_READ_FRAME_ERR = 171;</code>
     */
    TRPC_CLIENT_READ_FRAME_ERR(171),
    /**
     * <pre>
     * server-side streaming network or connection error code
     * </pre>
     *
     * <code>TRPC_STREAM_SERVER_NETWORK_ERR = 201;</code>
     */
    TRPC_STREAM_SERVER_NETWORK_ERR(201),
    /**
     * <pre>
     * stream message exceeds size limit
     * </pre>
     *
     * <code>TRPC_STREAM_SERVER_MSG_EXCEED_LIMIT_ERR = 211;</code>
     */
    TRPC_STREAM_SERVER_MSG_EXCEED_LIMIT_ERR(211),
    /**
     * <pre>
     * server-side streaming encode error code
     * </pre>
     *
     * <code>TRPC_STREAM_SERVER_ENCODE_ERR = 221;</code>
     */
    TRPC_STREAM_SERVER_ENCODE_ERR(221),
    /**
     * <pre>
     * server-side streaming decode error code
     * </pre>
     *
     * <code>TRPC_STREAM_SERVER_DECODE_ERR = 222;</code>
     */
    TRPC_STREAM_SERVER_DECODE_ERR(222),
    /**
     * <pre>
     * server-side stream write error code
     * </pre>
     *
     * <code>TRPC_STREAM_SERVER_WRITE_END = 231;</code>
     */
    TRPC_STREAM_SERVER_WRITE_END(231),
    /**
     * <code>TRPC_STREAM_SERVER_WRITE_OVERFLOW_ERR = 232;</code>
     */
    TRPC_STREAM_SERVER_WRITE_OVERFLOW_ERR(232),
    /**
     * <code>TRPC_STREAM_SERVER_WRITE_CLOSE_ERR = 233;</code>
     */
    TRPC_STREAM_SERVER_WRITE_CLOSE_ERR(233),
    /**
     * <code>TRPC_STREAM_SERVER_WRITE_TIMEOUT_ERR = 234;</code>
     */
    TRPC_STREAM_SERVER_WRITE_TIMEOUT_ERR(234),
    /**
     * <pre>
     * server-side stream read error code
     * </pre>
     *
     * <code>TRPC_STREAM_SERVER_READ_END = 251;</code>
     */
    TRPC_STREAM_SERVER_READ_END(251),
    /**
     * <code>TRPC_STREAM_SERVER_READ_CLOSE_ERR = 252;</code>
     */
    TRPC_STREAM_SERVER_READ_CLOSE_ERR(252),
    /**
     * <code>TRPC_STREAM_SERVER_READ_EMPTY_ERR = 253;</code>
     */
    TRPC_STREAM_SERVER_READ_EMPTY_ERR(253),
    /**
     * <code>TRPC_STREAM_SERVER_READ_TIMEOUT_ERR = 254;</code>
     */
    TRPC_STREAM_SERVER_READ_TIMEOUT_ERR(254),
    /**
     * <pre>
     * client-side streaming network or connection error code
     * </pre>
     *
     * <code>TRPC_STREAM_CLIENT_NETWORK_ERR = 301;</code>
     */
    TRPC_STREAM_CLIENT_NETWORK_ERR(301),
    /**
     * <pre>
     * client-side stream message exceeds size limit
     * </pre>
     *
     * <code>TRPC_STREAM_CLIENT_MSG_EXCEED_LIMIT_ERR = 311;</code>
     */
    TRPC_STREAM_CLIENT_MSG_EXCEED_LIMIT_ERR(311),
    /**
     * <pre>
     * client-side streaming encode error code
     * </pre>
     *
     * <code>TRPC_STREAM_CLIENT_ENCODE_ERR = 321;</code>
     */
    TRPC_STREAM_CLIENT_ENCODE_ERR(321),
    /**
     * <pre>
     * client-side streaming decode error code
     * </pre>
     *
     * <code>TRPC_STREAM_CLIENT_DECODE_ERR = 322;</code>
     */
    TRPC_STREAM_CLIENT_DECODE_ERR(322),
    /**
     * <pre>
     * client-side stream write error code
     * </pre>
     *
     * <code>TRPC_STREAM_CLIENT_WRITE_END = 331;</code>
     */
    TRPC_STREAM_CLIENT_WRITE_END(331),
    /**
     * <code>TRPC_STREAM_CLIENT_WRITE_OVERFLOW_ERR = 332;</code>
     */
    TRPC_STREAM_CLIENT_WRITE_OVERFLOW_ERR(332),
    /**
     * <code>TRPC_STREAM_CLIENT_WRITE_CLOSE_ERR = 333;</code>
     */
    TRPC_STREAM_CLIENT_WRITE_CLOSE_ERR(333),
    /**
     * <code>TRPC_STREAM_CLIENT_WRITE_TIMEOUT_ERR = 334;</code>
     */
    TRPC_STREAM_CLIENT_WRITE_TIMEOUT_ERR(334),
    /**
     * <pre>
     * client-side stream read error code
     * </pre>
     *
     * <code>TRPC_STREAM_CLIENT_READ_END = 351;</code>
     */
    TRPC_STREAM_CLIENT_READ_END(351),
    /**
     * <code>TRPC_STREAM_CLIENT_READ_CLOSE_ERR = 352;</code>
     */
    TRPC_STREAM_CLIENT_READ_CLOSE_ERR(352),
    /**
     * <code>TRPC_STREAM_CLIENT_READ_EMPTY_ERR = 353;</code>
     */
    TRPC_STREAM_CLIENT_READ_EMPTY_ERR(353),
    /**
     * <code>TRPC_STREAM_CLIENT_READ_TIMEOUT_ERR = 354;</code>
     */
    TRPC_STREAM_CLIENT_READ_TIMEOUT_ERR(354),
    /**
     * <pre>
     * unspecified error code(unary)
     * </pre>
     *
     * <code>TRPC_INVOKE_UNKNOWN_ERR = 999;</code>
     */
    TRPC_INVOKE_UNKNOWN_ERR(999),
    /**
     * <pre>
     * unspecified error code(stream)
     * </pre>
     *
     * <code>TRPC_STREAM_UNKNOWN_ERR = 1000;</code>
     */
    TRPC_STREAM_UNKNOWN_ERR(1000),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * success
     * </pre>
     *
     * <code>TRPC_INVOKE_SUCCESS = 0;</code>
     */
    public static final int TRPC_INVOKE_SUCCESS_VALUE = 0;
    /**
     * <pre>
     * server-side decode error
     * </pre>
     *
     * <code>TRPC_SERVER_DECODE_ERR = 1;</code>
     */
    public static final int TRPC_SERVER_DECODE_ERR_VALUE = 1;
    /**
     * <pre>
     * server-side encode error
     * </pre>
     *
     * <code>TRPC_SERVER_ENCODE_ERR = 2;</code>
     */
    public static final int TRPC_SERVER_ENCODE_ERR_VALUE = 2;
    /**
     * <pre>
     * the server-side does not have a corresponding service implementation
     * </pre>
     *
     * <code>TRPC_SERVER_NOSERVICE_ERR = 11;</code>
     */
    public static final int TRPC_SERVER_NOSERVICE_ERR_VALUE = 11;
    /**
     * <pre>
     * the server-side does not have a corresponding interface implementation
     * </pre>
     *
     * <code>TRPC_SERVER_NOFUNC_ERR = 12;</code>
     */
    public static final int TRPC_SERVER_NOFUNC_ERR_VALUE = 12;
    /**
     * <pre>
     * the request timed out on the server-side
     * </pre>
     *
     * <code>TRPC_SERVER_TIMEOUT_ERR = 21;</code>
     */
    public static final int TRPC_SERVER_TIMEOUT_ERR_VALUE = 21;
    /**
     * <pre>
     * the request is overloaded on the server-side and the request is discarded
     * </pre>
     *
     * <code>TRPC_SERVER_OVERLOAD_ERR = 22;</code>
     */
    public static final int TRPC_SERVER_OVERLOAD_ERR_VALUE = 22;
    /**
     * <pre>
     * the request is throttled on the server-side
     * </pre>
     *
     * <code>TRPC_SERVER_LIMITED_ERR = 23;</code>
     */
    public static final int TRPC_SERVER_LIMITED_ERR_VALUE = 23;
    /**
     * <pre>
     * The request is timed out on the server-side due to the full link timeout
     * </pre>
     *
     * <code>TRPC_SERVER_FULL_LINK_TIMEOUT_ERR = 24;</code>
     */
    public static final int TRPC_SERVER_FULL_LINK_TIMEOUT_ERR_VALUE = 24;
    /**
     * <pre>
     * server-side system error
     * </pre>
     *
     * <code>TRPC_SERVER_SYSTEM_ERR = 31;</code>
     */
    public static final int TRPC_SERVER_SYSTEM_ERR_VALUE = 31;
    /**
     * <pre>
     * the server-side request authentication failed error
     * </pre>
     *
     * <code>TRPC_SERVER_AUTH_ERR = 41;</code>
     */
    public static final int TRPC_SERVER_AUTH_ERR_VALUE = 41;
    /**
     * <pre>
     * the server-side request parameter automatic verification failed error
     * </pre>
     *
     * <code>TRPC_SERVER_VALIDATE_ERR = 51;</code>
     */
    public static final int TRPC_SERVER_VALIDATE_ERR_VALUE = 51;
    /**
     * <pre>
     * the request is timed out on the client-side
     * </pre>
     *
     * <code>TRPC_CLIENT_INVOKE_TIMEOUT_ERR = 101;</code>
     */
    public static final int TRPC_CLIENT_INVOKE_TIMEOUT_ERR_VALUE = 101;
    /**
     * <pre>
     * the request is timed out on the client-side due to the full link timeout
     * </pre>
     *
     * <code>TRPC_CLIENT_FULL_LINK_TIMEOUT_ERR = 102;</code>
     */
    public static final int TRPC_CLIENT_FULL_LINK_TIMEOUT_ERR_VALUE = 102;
    /**
     * <pre>
     * client-side connection error
     * </pre>
     *
     * <code>TRPC_CLIENT_CONNECT_ERR = 111;</code>
     */
    public static final int TRPC_CLIENT_CONNECT_ERR_VALUE = 111;
    /**
     * <pre>
     * client-side encode error
     * </pre>
     *
     * <code>TRPC_CLIENT_ENCODE_ERR = 121;</code>
     */
    public static final int TRPC_CLIENT_ENCODE_ERR_VALUE = 121;
    /**
     * <pre>
     * client-side decode error
     * </pre>
     *
     * <code>TRPC_CLIENT_DECODE_ERR = 122;</code>
     */
    public static final int TRPC_CLIENT_DECODE_ERR_VALUE = 122;
    /**
     * <pre>
     * the request is throttled on the client-side
     * </pre>
     *
     * <code>TRPC_CLIENT_LIMITED_ERR = 123;</code>
     */
    public static final int TRPC_CLIENT_LIMITED_ERR_VALUE = 123;
    /**
     * <pre>
     * The request is overloaded on the client-side and discarded
     * </pre>
     *
     * <code>TRPC_CLIENT_OVERLOAD_ERR = 124;</code>
     */
    public static final int TRPC_CLIENT_OVERLOAD_ERR_VALUE = 124;
    /**
     * <pre>
     * service routing error code
     * </pre>
     *
     * <code>TRPC_CLIENT_ROUTER_ERR = 131;</code>
     */
    public static final int TRPC_CLIENT_ROUTER_ERR_VALUE = 131;
    /**
     * <pre>
     * client-side network or connection error code
     * </pre>
     *
     * <code>TRPC_CLIENT_NETWORK_ERR = 141;</code>
     */
    public static final int TRPC_CLIENT_NETWORK_ERR_VALUE = 141;
    /**
     * <pre>
     * client-side response parameter automatic verification failed error
     * </pre>
     *
     * <code>TRPC_CLIENT_VALIDATE_ERR = 151;</code>
     */
    public static final int TRPC_CLIENT_VALIDATE_ERR_VALUE = 151;
    /**
     * <pre>
     * upstream actively disconnected, early cancellation request error code
     * </pre>
     *
     * <code>TRPC_CLIENT_CANCELED_ERR = 161;</code>
     */
    public static final int TRPC_CLIENT_CANCELED_ERR_VALUE = 161;
    /**
     * <pre>
     * client-side read data frame error
     * </pre>
     *
     * <code>TRPC_CLIENT_READ_FRAME_ERR = 171;</code>
     */
    public static final int TRPC_CLIENT_READ_FRAME_ERR_VALUE = 171;
    /**
     * <pre>
     * server-side streaming network or connection error code
     * </pre>
     *
     * <code>TRPC_STREAM_SERVER_NETWORK_ERR = 201;</code>
     */
    public static final int TRPC_STREAM_SERVER_NETWORK_ERR_VALUE = 201;
    /**
     * <pre>
     * stream message exceeds size limit
     * </pre>
     *
     * <code>TRPC_STREAM_SERVER_MSG_EXCEED_LIMIT_ERR = 211;</code>
     */
    public static final int TRPC_STREAM_SERVER_MSG_EXCEED_LIMIT_ERR_VALUE = 211;
    /**
     * <pre>
     * server-side streaming encode error code
     * </pre>
     *
     * <code>TRPC_STREAM_SERVER_ENCODE_ERR = 221;</code>
     */
    public static final int TRPC_STREAM_SERVER_ENCODE_ERR_VALUE = 221;
    /**
     * <pre>
     * server-side streaming decode error code
     * </pre>
     *
     * <code>TRPC_STREAM_SERVER_DECODE_ERR = 222;</code>
     */
    public static final int TRPC_STREAM_SERVER_DECODE_ERR_VALUE = 222;
    /**
     * <pre>
     * server-side stream write error code
     * </pre>
     *
     * <code>TRPC_STREAM_SERVER_WRITE_END = 231;</code>
     */
    public static final int TRPC_STREAM_SERVER_WRITE_END_VALUE = 231;
    /**
     * <code>TRPC_STREAM_SERVER_WRITE_OVERFLOW_ERR = 232;</code>
     */
    public static final int TRPC_STREAM_SERVER_WRITE_OVERFLOW_ERR_VALUE = 232;
    /**
     * <code>TRPC_STREAM_SERVER_WRITE_CLOSE_ERR = 233;</code>
     */
    public static final int TRPC_STREAM_SERVER_WRITE_CLOSE_ERR_VALUE = 233;
    /**
     * <code>TRPC_STREAM_SERVER_WRITE_TIMEOUT_ERR = 234;</code>
     */
    public static final int TRPC_STREAM_SERVER_WRITE_TIMEOUT_ERR_VALUE = 234;
    /**
     * <pre>
     * server-side stream read error code
     * </pre>
     *
     * <code>TRPC_STREAM_SERVER_READ_END = 251;</code>
     */
    public static final int TRPC_STREAM_SERVER_READ_END_VALUE = 251;
    /**
     * <code>TRPC_STREAM_SERVER_READ_CLOSE_ERR = 252;</code>
     */
    public static final int TRPC_STREAM_SERVER_READ_CLOSE_ERR_VALUE = 252;
    /**
     * <code>TRPC_STREAM_SERVER_READ_EMPTY_ERR = 253;</code>
     */
    public static final int TRPC_STREAM_SERVER_READ_EMPTY_ERR_VALUE = 253;
    /**
     * <code>TRPC_STREAM_SERVER_READ_TIMEOUT_ERR = 254;</code>
     */
    public static final int TRPC_STREAM_SERVER_READ_TIMEOUT_ERR_VALUE = 254;
    /**
     * <pre>
     * client-side streaming network or connection error code
     * </pre>
     *
     * <code>TRPC_STREAM_CLIENT_NETWORK_ERR = 301;</code>
     */
    public static final int TRPC_STREAM_CLIENT_NETWORK_ERR_VALUE = 301;
    /**
     * <pre>
     * client-side stream message exceeds size limit
     * </pre>
     *
     * <code>TRPC_STREAM_CLIENT_MSG_EXCEED_LIMIT_ERR = 311;</code>
     */
    public static final int TRPC_STREAM_CLIENT_MSG_EXCEED_LIMIT_ERR_VALUE = 311;
    /**
     * <pre>
     * client-side streaming encode error code
     * </pre>
     *
     * <code>TRPC_STREAM_CLIENT_ENCODE_ERR = 321;</code>
     */
    public static final int TRPC_STREAM_CLIENT_ENCODE_ERR_VALUE = 321;
    /**
     * <pre>
     * client-side streaming decode error code
     * </pre>
     *
     * <code>TRPC_STREAM_CLIENT_DECODE_ERR = 322;</code>
     */
    public static final int TRPC_STREAM_CLIENT_DECODE_ERR_VALUE = 322;
    /**
     * <pre>
     * client-side stream write error code
     * </pre>
     *
     * <code>TRPC_STREAM_CLIENT_WRITE_END = 331;</code>
     */
    public static final int TRPC_STREAM_CLIENT_WRITE_END_VALUE = 331;
    /**
     * <code>TRPC_STREAM_CLIENT_WRITE_OVERFLOW_ERR = 332;</code>
     */
    public static final int TRPC_STREAM_CLIENT_WRITE_OVERFLOW_ERR_VALUE = 332;
    /**
     * <code>TRPC_STREAM_CLIENT_WRITE_CLOSE_ERR = 333;</code>
     */
    public static final int TRPC_STREAM_CLIENT_WRITE_CLOSE_ERR_VALUE = 333;
    /**
     * <code>TRPC_STREAM_CLIENT_WRITE_TIMEOUT_ERR = 334;</code>
     */
    public static final int TRPC_STREAM_CLIENT_WRITE_TIMEOUT_ERR_VALUE = 334;
    /**
     * <pre>
     * client-side stream read error code
     * </pre>
     *
     * <code>TRPC_STREAM_CLIENT_READ_END = 351;</code>
     */
    public static final int TRPC_STREAM_CLIENT_READ_END_VALUE = 351;
    /**
     * <code>TRPC_STREAM_CLIENT_READ_CLOSE_ERR = 352;</code>
     */
    public static final int TRPC_STREAM_CLIENT_READ_CLOSE_ERR_VALUE = 352;
    /**
     * <code>TRPC_STREAM_CLIENT_READ_EMPTY_ERR = 353;</code>
     */
    public static final int TRPC_STREAM_CLIENT_READ_EMPTY_ERR_VALUE = 353;
    /**
     * <code>TRPC_STREAM_CLIENT_READ_TIMEOUT_ERR = 354;</code>
     */
    public static final int TRPC_STREAM_CLIENT_READ_TIMEOUT_ERR_VALUE = 354;
    /**
     * <pre>
     * unspecified error code(unary)
     * </pre>
     *
     * <code>TRPC_INVOKE_UNKNOWN_ERR = 999;</code>
     */
    public static final int TRPC_INVOKE_UNKNOWN_ERR_VALUE = 999;
    /**
     * <pre>
     * unspecified error code(stream)
     * </pre>
     *
     * <code>TRPC_STREAM_UNKNOWN_ERR = 1000;</code>
     */
    public static final int TRPC_STREAM_UNKNOWN_ERR_VALUE = 1000;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TrpcRetCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TrpcRetCode forNumber(int value) {
      switch (value) {
        case 0: return TRPC_INVOKE_SUCCESS;
        case 1: return TRPC_SERVER_DECODE_ERR;
        case 2: return TRPC_SERVER_ENCODE_ERR;
        case 11: return TRPC_SERVER_NOSERVICE_ERR;
        case 12: return TRPC_SERVER_NOFUNC_ERR;
        case 21: return TRPC_SERVER_TIMEOUT_ERR;
        case 22: return TRPC_SERVER_OVERLOAD_ERR;
        case 23: return TRPC_SERVER_LIMITED_ERR;
        case 24: return TRPC_SERVER_FULL_LINK_TIMEOUT_ERR;
        case 31: return TRPC_SERVER_SYSTEM_ERR;
        case 41: return TRPC_SERVER_AUTH_ERR;
        case 51: return TRPC_SERVER_VALIDATE_ERR;
        case 101: return TRPC_CLIENT_INVOKE_TIMEOUT_ERR;
        case 102: return TRPC_CLIENT_FULL_LINK_TIMEOUT_ERR;
        case 111: return TRPC_CLIENT_CONNECT_ERR;
        case 121: return TRPC_CLIENT_ENCODE_ERR;
        case 122: return TRPC_CLIENT_DECODE_ERR;
        case 123: return TRPC_CLIENT_LIMITED_ERR;
        case 124: return TRPC_CLIENT_OVERLOAD_ERR;
        case 131: return TRPC_CLIENT_ROUTER_ERR;
        case 141: return TRPC_CLIENT_NETWORK_ERR;
        case 151: return TRPC_CLIENT_VALIDATE_ERR;
        case 161: return TRPC_CLIENT_CANCELED_ERR;
        case 171: return TRPC_CLIENT_READ_FRAME_ERR;
        case 201: return TRPC_STREAM_SERVER_NETWORK_ERR;
        case 211: return TRPC_STREAM_SERVER_MSG_EXCEED_LIMIT_ERR;
        case 221: return TRPC_STREAM_SERVER_ENCODE_ERR;
        case 222: return TRPC_STREAM_SERVER_DECODE_ERR;
        case 231: return TRPC_STREAM_SERVER_WRITE_END;
        case 232: return TRPC_STREAM_SERVER_WRITE_OVERFLOW_ERR;
        case 233: return TRPC_STREAM_SERVER_WRITE_CLOSE_ERR;
        case 234: return TRPC_STREAM_SERVER_WRITE_TIMEOUT_ERR;
        case 251: return TRPC_STREAM_SERVER_READ_END;
        case 252: return TRPC_STREAM_SERVER_READ_CLOSE_ERR;
        case 253: return TRPC_STREAM_SERVER_READ_EMPTY_ERR;
        case 254: return TRPC_STREAM_SERVER_READ_TIMEOUT_ERR;
        case 301: return TRPC_STREAM_CLIENT_NETWORK_ERR;
        case 311: return TRPC_STREAM_CLIENT_MSG_EXCEED_LIMIT_ERR;
        case 321: return TRPC_STREAM_CLIENT_ENCODE_ERR;
        case 322: return TRPC_STREAM_CLIENT_DECODE_ERR;
        case 331: return TRPC_STREAM_CLIENT_WRITE_END;
        case 332: return TRPC_STREAM_CLIENT_WRITE_OVERFLOW_ERR;
        case 333: return TRPC_STREAM_CLIENT_WRITE_CLOSE_ERR;
        case 334: return TRPC_STREAM_CLIENT_WRITE_TIMEOUT_ERR;
        case 351: return TRPC_STREAM_CLIENT_READ_END;
        case 352: return TRPC_STREAM_CLIENT_READ_CLOSE_ERR;
        case 353: return TRPC_STREAM_CLIENT_READ_EMPTY_ERR;
        case 354: return TRPC_STREAM_CLIENT_READ_TIMEOUT_ERR;
        case 999: return TRPC_INVOKE_UNKNOWN_ERR;
        case 1000: return TRPC_STREAM_UNKNOWN_ERR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TrpcRetCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TrpcRetCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TrpcRetCode>() {
            public TrpcRetCode findValueByNumber(int number) {
              return TrpcRetCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.tencent.trpc.proto.standard.common.TRPCProtocol.getDescriptor().getEnumTypes().get(9);
    }

    private static final TrpcRetCode[] VALUES = values();

    public static TrpcRetCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TrpcRetCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:trpc.TrpcRetCode)
  }

  public interface TrpcStreamInitMetaOrBuilder extends
      // @@protoc_insertion_point(interface_extends:trpc.TrpcStreamInitMeta)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * request meta information
     * </pre>
     *
     * <code>.trpc.TrpcStreamInitRequestMeta request_meta = 1;</code>
     * @return Whether the requestMeta field is set.
     */
    boolean hasRequestMeta();
    /**
     * <pre>
     * request meta information
     * </pre>
     *
     * <code>.trpc.TrpcStreamInitRequestMeta request_meta = 1;</code>
     * @return The requestMeta.
     */
    com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta getRequestMeta();
    /**
     * <pre>
     * request meta information
     * </pre>
     *
     * <code>.trpc.TrpcStreamInitRequestMeta request_meta = 1;</code>
     */
    com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMetaOrBuilder getRequestMetaOrBuilder();

    /**
     * <pre>
     * response meta information
     * </pre>
     *
     * <code>.trpc.TrpcStreamInitResponseMeta response_meta = 2;</code>
     * @return Whether the responseMeta field is set.
     */
    boolean hasResponseMeta();
    /**
     * <pre>
     * response meta information
     * </pre>
     *
     * <code>.trpc.TrpcStreamInitResponseMeta response_meta = 2;</code>
     * @return The responseMeta.
     */
    com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta getResponseMeta();
    /**
     * <pre>
     * response meta information
     * </pre>
     *
     * <code>.trpc.TrpcStreamInitResponseMeta response_meta = 2;</code>
     */
    com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMetaOrBuilder getResponseMetaOrBuilder();

    /**
     * <pre>
     * The window size is notified by the receiver to the sender
     * </pre>
     *
     * <code>uint32 init_window_size = 3;</code>
     * @return The initWindowSize.
     */
    int getInitWindowSize();

    /**
     * <pre>
     * The serialization type of the request data
     * eg: proto/json/.., default proto
     * The specific value corresponds to `TrpcContentEncodeType`
     * </pre>
     *
     * <code>uint32 content_type = 4;</code>
     * @return The contentType.
     */
    int getContentType();

    /**
     * <pre>
     * The compression type of the requested data
     * eg: gzip/snappy/..., not used by default
     * The specific value corresponds to `TrpcCompressType`
     * </pre>
     *
     * <code>uint32 content_encoding = 5;</code>
     * @return The contentEncoding.
     */
    int getContentEncoding();
  }
  /**
   * <pre>
   * The message definition of stream `INIT` frame
   * </pre>
   *
   * Protobuf type {@code trpc.TrpcStreamInitMeta}
   */
  public static final class TrpcStreamInitMeta extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:trpc.TrpcStreamInitMeta)
      TrpcStreamInitMetaOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TrpcStreamInitMeta.newBuilder() to construct.
    private TrpcStreamInitMeta(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TrpcStreamInitMeta() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TrpcStreamInitMeta();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TrpcStreamInitMeta(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta.Builder subBuilder = null;
              if (requestMeta_ != null) {
                subBuilder = requestMeta_.toBuilder();
              }
              requestMeta_ = input.readMessage(com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(requestMeta_);
                requestMeta_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta.Builder subBuilder = null;
              if (responseMeta_ != null) {
                subBuilder = responseMeta_.toBuilder();
              }
              responseMeta_ = input.readMessage(com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(responseMeta_);
                responseMeta_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              initWindowSize_ = input.readUInt32();
              break;
            }
            case 32: {

              contentType_ = input.readUInt32();
              break;
            }
            case 40: {

              contentEncoding_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_TrpcStreamInitMeta_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_TrpcStreamInitMeta_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta.class, com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta.Builder.class);
    }

    public static final int REQUEST_META_FIELD_NUMBER = 1;
    private com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta requestMeta_;
    /**
     * <pre>
     * request meta information
     * </pre>
     *
     * <code>.trpc.TrpcStreamInitRequestMeta request_meta = 1;</code>
     * @return Whether the requestMeta field is set.
     */
    @java.lang.Override
    public boolean hasRequestMeta() {
      return requestMeta_ != null;
    }
    /**
     * <pre>
     * request meta information
     * </pre>
     *
     * <code>.trpc.TrpcStreamInitRequestMeta request_meta = 1;</code>
     * @return The requestMeta.
     */
    @java.lang.Override
    public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta getRequestMeta() {
      return requestMeta_ == null ? com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta.getDefaultInstance() : requestMeta_;
    }
    /**
     * <pre>
     * request meta information
     * </pre>
     *
     * <code>.trpc.TrpcStreamInitRequestMeta request_meta = 1;</code>
     */
    @java.lang.Override
    public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMetaOrBuilder getRequestMetaOrBuilder() {
      return getRequestMeta();
    }

    public static final int RESPONSE_META_FIELD_NUMBER = 2;
    private com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta responseMeta_;
    /**
     * <pre>
     * response meta information
     * </pre>
     *
     * <code>.trpc.TrpcStreamInitResponseMeta response_meta = 2;</code>
     * @return Whether the responseMeta field is set.
     */
    @java.lang.Override
    public boolean hasResponseMeta() {
      return responseMeta_ != null;
    }
    /**
     * <pre>
     * response meta information
     * </pre>
     *
     * <code>.trpc.TrpcStreamInitResponseMeta response_meta = 2;</code>
     * @return The responseMeta.
     */
    @java.lang.Override
    public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta getResponseMeta() {
      return responseMeta_ == null ? com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta.getDefaultInstance() : responseMeta_;
    }
    /**
     * <pre>
     * response meta information
     * </pre>
     *
     * <code>.trpc.TrpcStreamInitResponseMeta response_meta = 2;</code>
     */
    @java.lang.Override
    public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMetaOrBuilder getResponseMetaOrBuilder() {
      return getResponseMeta();
    }

    public static final int INIT_WINDOW_SIZE_FIELD_NUMBER = 3;
    private int initWindowSize_;
    /**
     * <pre>
     * The window size is notified by the receiver to the sender
     * </pre>
     *
     * <code>uint32 init_window_size = 3;</code>
     * @return The initWindowSize.
     */
    @java.lang.Override
    public int getInitWindowSize() {
      return initWindowSize_;
    }

    public static final int CONTENT_TYPE_FIELD_NUMBER = 4;
    private int contentType_;
    /**
     * <pre>
     * The serialization type of the request data
     * eg: proto/json/.., default proto
     * The specific value corresponds to `TrpcContentEncodeType`
     * </pre>
     *
     * <code>uint32 content_type = 4;</code>
     * @return The contentType.
     */
    @java.lang.Override
    public int getContentType() {
      return contentType_;
    }

    public static final int CONTENT_ENCODING_FIELD_NUMBER = 5;
    private int contentEncoding_;
    /**
     * <pre>
     * The compression type of the requested data
     * eg: gzip/snappy/..., not used by default
     * The specific value corresponds to `TrpcCompressType`
     * </pre>
     *
     * <code>uint32 content_encoding = 5;</code>
     * @return The contentEncoding.
     */
    @java.lang.Override
    public int getContentEncoding() {
      return contentEncoding_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (requestMeta_ != null) {
        output.writeMessage(1, getRequestMeta());
      }
      if (responseMeta_ != null) {
        output.writeMessage(2, getResponseMeta());
      }
      if (initWindowSize_ != 0) {
        output.writeUInt32(3, initWindowSize_);
      }
      if (contentType_ != 0) {
        output.writeUInt32(4, contentType_);
      }
      if (contentEncoding_ != 0) {
        output.writeUInt32(5, contentEncoding_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (requestMeta_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getRequestMeta());
      }
      if (responseMeta_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getResponseMeta());
      }
      if (initWindowSize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, initWindowSize_);
      }
      if (contentType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, contentType_);
      }
      if (contentEncoding_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, contentEncoding_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta)) {
        return super.equals(obj);
      }
      com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta other = (com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta) obj;

      if (hasRequestMeta() != other.hasRequestMeta()) return false;
      if (hasRequestMeta()) {
        if (!getRequestMeta()
            .equals(other.getRequestMeta())) return false;
      }
      if (hasResponseMeta() != other.hasResponseMeta()) return false;
      if (hasResponseMeta()) {
        if (!getResponseMeta()
            .equals(other.getResponseMeta())) return false;
      }
      if (getInitWindowSize()
          != other.getInitWindowSize()) return false;
      if (getContentType()
          != other.getContentType()) return false;
      if (getContentEncoding()
          != other.getContentEncoding()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRequestMeta()) {
        hash = (37 * hash) + REQUEST_META_FIELD_NUMBER;
        hash = (53 * hash) + getRequestMeta().hashCode();
      }
      if (hasResponseMeta()) {
        hash = (37 * hash) + RESPONSE_META_FIELD_NUMBER;
        hash = (53 * hash) + getResponseMeta().hashCode();
      }
      hash = (37 * hash) + INIT_WINDOW_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + getInitWindowSize();
      hash = (37 * hash) + CONTENT_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getContentType();
      hash = (37 * hash) + CONTENT_ENCODING_FIELD_NUMBER;
      hash = (53 * hash) + getContentEncoding();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The message definition of stream `INIT` frame
     * </pre>
     *
     * Protobuf type {@code trpc.TrpcStreamInitMeta}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:trpc.TrpcStreamInitMeta)
        com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMetaOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_TrpcStreamInitMeta_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_TrpcStreamInitMeta_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta.class, com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta.Builder.class);
      }

      // Construct using com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (requestMetaBuilder_ == null) {
          requestMeta_ = null;
        } else {
          requestMeta_ = null;
          requestMetaBuilder_ = null;
        }
        if (responseMetaBuilder_ == null) {
          responseMeta_ = null;
        } else {
          responseMeta_ = null;
          responseMetaBuilder_ = null;
        }
        initWindowSize_ = 0;

        contentType_ = 0;

        contentEncoding_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_TrpcStreamInitMeta_descriptor;
      }

      @java.lang.Override
      public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta getDefaultInstanceForType() {
        return com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta.getDefaultInstance();
      }

      @java.lang.Override
      public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta build() {
        com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta buildPartial() {
        com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta result = new com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta(this);
        if (requestMetaBuilder_ == null) {
          result.requestMeta_ = requestMeta_;
        } else {
          result.requestMeta_ = requestMetaBuilder_.build();
        }
        if (responseMetaBuilder_ == null) {
          result.responseMeta_ = responseMeta_;
        } else {
          result.responseMeta_ = responseMetaBuilder_.build();
        }
        result.initWindowSize_ = initWindowSize_;
        result.contentType_ = contentType_;
        result.contentEncoding_ = contentEncoding_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta) {
          return mergeFrom((com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta other) {
        if (other == com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta.getDefaultInstance()) return this;
        if (other.hasRequestMeta()) {
          mergeRequestMeta(other.getRequestMeta());
        }
        if (other.hasResponseMeta()) {
          mergeResponseMeta(other.getResponseMeta());
        }
        if (other.getInitWindowSize() != 0) {
          setInitWindowSize(other.getInitWindowSize());
        }
        if (other.getContentType() != 0) {
          setContentType(other.getContentType());
        }
        if (other.getContentEncoding() != 0) {
          setContentEncoding(other.getContentEncoding());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta requestMeta_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta, com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta.Builder, com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMetaOrBuilder> requestMetaBuilder_;
      /**
       * <pre>
       * request meta information
       * </pre>
       *
       * <code>.trpc.TrpcStreamInitRequestMeta request_meta = 1;</code>
       * @return Whether the requestMeta field is set.
       */
      public boolean hasRequestMeta() {
        return requestMetaBuilder_ != null || requestMeta_ != null;
      }
      /**
       * <pre>
       * request meta information
       * </pre>
       *
       * <code>.trpc.TrpcStreamInitRequestMeta request_meta = 1;</code>
       * @return The requestMeta.
       */
      public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta getRequestMeta() {
        if (requestMetaBuilder_ == null) {
          return requestMeta_ == null ? com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta.getDefaultInstance() : requestMeta_;
        } else {
          return requestMetaBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * request meta information
       * </pre>
       *
       * <code>.trpc.TrpcStreamInitRequestMeta request_meta = 1;</code>
       */
      public Builder setRequestMeta(com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta value) {
        if (requestMetaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          requestMeta_ = value;
          onChanged();
        } else {
          requestMetaBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * request meta information
       * </pre>
       *
       * <code>.trpc.TrpcStreamInitRequestMeta request_meta = 1;</code>
       */
      public Builder setRequestMeta(
          com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta.Builder builderForValue) {
        if (requestMetaBuilder_ == null) {
          requestMeta_ = builderForValue.build();
          onChanged();
        } else {
          requestMetaBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * request meta information
       * </pre>
       *
       * <code>.trpc.TrpcStreamInitRequestMeta request_meta = 1;</code>
       */
      public Builder mergeRequestMeta(com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta value) {
        if (requestMetaBuilder_ == null) {
          if (requestMeta_ != null) {
            requestMeta_ =
              com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta.newBuilder(requestMeta_).mergeFrom(value).buildPartial();
          } else {
            requestMeta_ = value;
          }
          onChanged();
        } else {
          requestMetaBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * request meta information
       * </pre>
       *
       * <code>.trpc.TrpcStreamInitRequestMeta request_meta = 1;</code>
       */
      public Builder clearRequestMeta() {
        if (requestMetaBuilder_ == null) {
          requestMeta_ = null;
          onChanged();
        } else {
          requestMeta_ = null;
          requestMetaBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * request meta information
       * </pre>
       *
       * <code>.trpc.TrpcStreamInitRequestMeta request_meta = 1;</code>
       */
      public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta.Builder getRequestMetaBuilder() {
        
        onChanged();
        return getRequestMetaFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * request meta information
       * </pre>
       *
       * <code>.trpc.TrpcStreamInitRequestMeta request_meta = 1;</code>
       */
      public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMetaOrBuilder getRequestMetaOrBuilder() {
        if (requestMetaBuilder_ != null) {
          return requestMetaBuilder_.getMessageOrBuilder();
        } else {
          return requestMeta_ == null ?
              com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta.getDefaultInstance() : requestMeta_;
        }
      }
      /**
       * <pre>
       * request meta information
       * </pre>
       *
       * <code>.trpc.TrpcStreamInitRequestMeta request_meta = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta, com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta.Builder, com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMetaOrBuilder> 
          getRequestMetaFieldBuilder() {
        if (requestMetaBuilder_ == null) {
          requestMetaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta, com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta.Builder, com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMetaOrBuilder>(
                  getRequestMeta(),
                  getParentForChildren(),
                  isClean());
          requestMeta_ = null;
        }
        return requestMetaBuilder_;
      }

      private com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta responseMeta_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta, com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta.Builder, com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMetaOrBuilder> responseMetaBuilder_;
      /**
       * <pre>
       * response meta information
       * </pre>
       *
       * <code>.trpc.TrpcStreamInitResponseMeta response_meta = 2;</code>
       * @return Whether the responseMeta field is set.
       */
      public boolean hasResponseMeta() {
        return responseMetaBuilder_ != null || responseMeta_ != null;
      }
      /**
       * <pre>
       * response meta information
       * </pre>
       *
       * <code>.trpc.TrpcStreamInitResponseMeta response_meta = 2;</code>
       * @return The responseMeta.
       */
      public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta getResponseMeta() {
        if (responseMetaBuilder_ == null) {
          return responseMeta_ == null ? com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta.getDefaultInstance() : responseMeta_;
        } else {
          return responseMetaBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * response meta information
       * </pre>
       *
       * <code>.trpc.TrpcStreamInitResponseMeta response_meta = 2;</code>
       */
      public Builder setResponseMeta(com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta value) {
        if (responseMetaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          responseMeta_ = value;
          onChanged();
        } else {
          responseMetaBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * response meta information
       * </pre>
       *
       * <code>.trpc.TrpcStreamInitResponseMeta response_meta = 2;</code>
       */
      public Builder setResponseMeta(
          com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta.Builder builderForValue) {
        if (responseMetaBuilder_ == null) {
          responseMeta_ = builderForValue.build();
          onChanged();
        } else {
          responseMetaBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * response meta information
       * </pre>
       *
       * <code>.trpc.TrpcStreamInitResponseMeta response_meta = 2;</code>
       */
      public Builder mergeResponseMeta(com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta value) {
        if (responseMetaBuilder_ == null) {
          if (responseMeta_ != null) {
            responseMeta_ =
              com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta.newBuilder(responseMeta_).mergeFrom(value).buildPartial();
          } else {
            responseMeta_ = value;
          }
          onChanged();
        } else {
          responseMetaBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * response meta information
       * </pre>
       *
       * <code>.trpc.TrpcStreamInitResponseMeta response_meta = 2;</code>
       */
      public Builder clearResponseMeta() {
        if (responseMetaBuilder_ == null) {
          responseMeta_ = null;
          onChanged();
        } else {
          responseMeta_ = null;
          responseMetaBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * response meta information
       * </pre>
       *
       * <code>.trpc.TrpcStreamInitResponseMeta response_meta = 2;</code>
       */
      public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta.Builder getResponseMetaBuilder() {
        
        onChanged();
        return getResponseMetaFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * response meta information
       * </pre>
       *
       * <code>.trpc.TrpcStreamInitResponseMeta response_meta = 2;</code>
       */
      public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMetaOrBuilder getResponseMetaOrBuilder() {
        if (responseMetaBuilder_ != null) {
          return responseMetaBuilder_.getMessageOrBuilder();
        } else {
          return responseMeta_ == null ?
              com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta.getDefaultInstance() : responseMeta_;
        }
      }
      /**
       * <pre>
       * response meta information
       * </pre>
       *
       * <code>.trpc.TrpcStreamInitResponseMeta response_meta = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta, com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta.Builder, com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMetaOrBuilder> 
          getResponseMetaFieldBuilder() {
        if (responseMetaBuilder_ == null) {
          responseMetaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta, com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta.Builder, com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMetaOrBuilder>(
                  getResponseMeta(),
                  getParentForChildren(),
                  isClean());
          responseMeta_ = null;
        }
        return responseMetaBuilder_;
      }

      private int initWindowSize_ ;
      /**
       * <pre>
       * The window size is notified by the receiver to the sender
       * </pre>
       *
       * <code>uint32 init_window_size = 3;</code>
       * @return The initWindowSize.
       */
      @java.lang.Override
      public int getInitWindowSize() {
        return initWindowSize_;
      }
      /**
       * <pre>
       * The window size is notified by the receiver to the sender
       * </pre>
       *
       * <code>uint32 init_window_size = 3;</code>
       * @param value The initWindowSize to set.
       * @return This builder for chaining.
       */
      public Builder setInitWindowSize(int value) {
        
        initWindowSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The window size is notified by the receiver to the sender
       * </pre>
       *
       * <code>uint32 init_window_size = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearInitWindowSize() {
        
        initWindowSize_ = 0;
        onChanged();
        return this;
      }

      private int contentType_ ;
      /**
       * <pre>
       * The serialization type of the request data
       * eg: proto/json/.., default proto
       * The specific value corresponds to `TrpcContentEncodeType`
       * </pre>
       *
       * <code>uint32 content_type = 4;</code>
       * @return The contentType.
       */
      @java.lang.Override
      public int getContentType() {
        return contentType_;
      }
      /**
       * <pre>
       * The serialization type of the request data
       * eg: proto/json/.., default proto
       * The specific value corresponds to `TrpcContentEncodeType`
       * </pre>
       *
       * <code>uint32 content_type = 4;</code>
       * @param value The contentType to set.
       * @return This builder for chaining.
       */
      public Builder setContentType(int value) {
        
        contentType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The serialization type of the request data
       * eg: proto/json/.., default proto
       * The specific value corresponds to `TrpcContentEncodeType`
       * </pre>
       *
       * <code>uint32 content_type = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearContentType() {
        
        contentType_ = 0;
        onChanged();
        return this;
      }

      private int contentEncoding_ ;
      /**
       * <pre>
       * The compression type of the requested data
       * eg: gzip/snappy/..., not used by default
       * The specific value corresponds to `TrpcCompressType`
       * </pre>
       *
       * <code>uint32 content_encoding = 5;</code>
       * @return The contentEncoding.
       */
      @java.lang.Override
      public int getContentEncoding() {
        return contentEncoding_;
      }
      /**
       * <pre>
       * The compression type of the requested data
       * eg: gzip/snappy/..., not used by default
       * The specific value corresponds to `TrpcCompressType`
       * </pre>
       *
       * <code>uint32 content_encoding = 5;</code>
       * @param value The contentEncoding to set.
       * @return This builder for chaining.
       */
      public Builder setContentEncoding(int value) {
        
        contentEncoding_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The compression type of the requested data
       * eg: gzip/snappy/..., not used by default
       * The specific value corresponds to `TrpcCompressType`
       * </pre>
       *
       * <code>uint32 content_encoding = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearContentEncoding() {
        
        contentEncoding_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:trpc.TrpcStreamInitMeta)
    }

    // @@protoc_insertion_point(class_scope:trpc.TrpcStreamInitMeta)
    private static final com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta();
    }

    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TrpcStreamInitMeta>
        PARSER = new com.google.protobuf.AbstractParser<TrpcStreamInitMeta>() {
      @java.lang.Override
      public TrpcStreamInitMeta parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TrpcStreamInitMeta(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TrpcStreamInitMeta> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TrpcStreamInitMeta> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitMeta getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TrpcStreamInitRequestMetaOrBuilder extends
      // @@protoc_insertion_point(interface_extends:trpc.TrpcStreamInitRequestMeta)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Caller name
     * The specification format: trpc.application_name.server_name.proto_service_name, 4 segments
     * </pre>
     *
     * <code>bytes caller = 1;</code>
     * @return The caller.
     */
    com.google.protobuf.ByteString getCaller();

    /**
     * <pre>
     * Callee name
     * The specification format: trpc.application_name.server_name.proto_service_name[.interface_name]
     * </pre>
     *
     * <code>bytes callee = 2;</code>
     * @return The callee.
     */
    com.google.protobuf.ByteString getCallee();

    /**
     * <pre>
     * Interface name of callee
     * The specification format: /package.service_name/interface_name
     * </pre>
     *
     * <code>bytes func = 3;</code>
     * @return The func.
     */
    com.google.protobuf.ByteString getFunc();

    /**
     * <pre>
     * The message type of the transparent transmission information
     * such as tracing, dyeing key, gray, authentication, multi-environment, set name, etc.
     * The specific value corresponds to `TrpcMessageType`
     * </pre>
     *
     * <code>uint32 message_type = 4;</code>
     * @return The messageType.
     */
    int getMessageType();

    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
     */
    int getTransInfoCount();
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
     */
    boolean containsTransInfo(
        java.lang.String key);
    /**
     * Use {@link #getTransInfoMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getTransInfo();
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
     */
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getTransInfoMap();
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
     */

    com.google.protobuf.ByteString getTransInfoOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue);
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
     */

    com.google.protobuf.ByteString getTransInfoOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * The request meta information definition of stream `INIT` frame
   * </pre>
   *
   * Protobuf type {@code trpc.TrpcStreamInitRequestMeta}
   */
  public static final class TrpcStreamInitRequestMeta extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:trpc.TrpcStreamInitRequestMeta)
      TrpcStreamInitRequestMetaOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TrpcStreamInitRequestMeta.newBuilder() to construct.
    private TrpcStreamInitRequestMeta(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TrpcStreamInitRequestMeta() {
      caller_ = com.google.protobuf.ByteString.EMPTY;
      callee_ = com.google.protobuf.ByteString.EMPTY;
      func_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TrpcStreamInitRequestMeta();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TrpcStreamInitRequestMeta(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              caller_ = input.readBytes();
              break;
            }
            case 18: {

              callee_ = input.readBytes();
              break;
            }
            case 26: {

              func_ = input.readBytes();
              break;
            }
            case 32: {

              messageType_ = input.readUInt32();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                transInfo_ = com.google.protobuf.MapField.newMapField(
                    TransInfoDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
              transInfo__ = input.readMessage(
                  TransInfoDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              transInfo_.getMutableMap().put(
                  transInfo__.getKey(), transInfo__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_TrpcStreamInitRequestMeta_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetTransInfo();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_TrpcStreamInitRequestMeta_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta.class, com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta.Builder.class);
    }

    public static final int CALLER_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString caller_;
    /**
     * <pre>
     * Caller name
     * The specification format: trpc.application_name.server_name.proto_service_name, 4 segments
     * </pre>
     *
     * <code>bytes caller = 1;</code>
     * @return The caller.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getCaller() {
      return caller_;
    }

    public static final int CALLEE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString callee_;
    /**
     * <pre>
     * Callee name
     * The specification format: trpc.application_name.server_name.proto_service_name[.interface_name]
     * </pre>
     *
     * <code>bytes callee = 2;</code>
     * @return The callee.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getCallee() {
      return callee_;
    }

    public static final int FUNC_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString func_;
    /**
     * <pre>
     * Interface name of callee
     * The specification format: /package.service_name/interface_name
     * </pre>
     *
     * <code>bytes func = 3;</code>
     * @return The func.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getFunc() {
      return func_;
    }

    public static final int MESSAGE_TYPE_FIELD_NUMBER = 4;
    private int messageType_;
    /**
     * <pre>
     * The message type of the transparent transmission information
     * such as tracing, dyeing key, gray, authentication, multi-environment, set name, etc.
     * The specific value corresponds to `TrpcMessageType`
     * </pre>
     *
     * <code>uint32 message_type = 4;</code>
     * @return The messageType.
     */
    @java.lang.Override
    public int getMessageType() {
      return messageType_;
    }

    public static final int TRANS_INFO_FIELD_NUMBER = 5;
    private static final class TransInfoDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, com.google.protobuf.ByteString>newDefaultInstance(
                  com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_TrpcStreamInitRequestMeta_TransInfoEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    private com.google.protobuf.MapField<
        java.lang.String, com.google.protobuf.ByteString> transInfo_;
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
    internalGetTransInfo() {
      if (transInfo_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TransInfoDefaultEntryHolder.defaultEntry);
      }
      return transInfo_;
    }

    public int getTransInfoCount() {
      return internalGetTransInfo().getMap().size();
    }
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
     */

    @java.lang.Override
    public boolean containsTransInfo(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetTransInfo().getMap().containsKey(key);
    }
    /**
     * Use {@link #getTransInfoMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getTransInfo() {
      return getTransInfoMap();
    }
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getTransInfoMap() {
      return internalGetTransInfo().getMap();
    }
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getTransInfoOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetTransInfo().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getTransInfoOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetTransInfo().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!caller_.isEmpty()) {
        output.writeBytes(1, caller_);
      }
      if (!callee_.isEmpty()) {
        output.writeBytes(2, callee_);
      }
      if (!func_.isEmpty()) {
        output.writeBytes(3, func_);
      }
      if (messageType_ != 0) {
        output.writeUInt32(4, messageType_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetTransInfo(),
          TransInfoDefaultEntryHolder.defaultEntry,
          5);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!caller_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, caller_);
      }
      if (!callee_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, callee_);
      }
      if (!func_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, func_);
      }
      if (messageType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, messageType_);
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ByteString> entry
           : internalGetTransInfo().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
        transInfo__ = TransInfoDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, transInfo__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta)) {
        return super.equals(obj);
      }
      com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta other = (com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta) obj;

      if (!getCaller()
          .equals(other.getCaller())) return false;
      if (!getCallee()
          .equals(other.getCallee())) return false;
      if (!getFunc()
          .equals(other.getFunc())) return false;
      if (getMessageType()
          != other.getMessageType()) return false;
      if (!internalGetTransInfo().equals(
          other.internalGetTransInfo())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CALLER_FIELD_NUMBER;
      hash = (53 * hash) + getCaller().hashCode();
      hash = (37 * hash) + CALLEE_FIELD_NUMBER;
      hash = (53 * hash) + getCallee().hashCode();
      hash = (37 * hash) + FUNC_FIELD_NUMBER;
      hash = (53 * hash) + getFunc().hashCode();
      hash = (37 * hash) + MESSAGE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getMessageType();
      if (!internalGetTransInfo().getMap().isEmpty()) {
        hash = (37 * hash) + TRANS_INFO_FIELD_NUMBER;
        hash = (53 * hash) + internalGetTransInfo().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The request meta information definition of stream `INIT` frame
     * </pre>
     *
     * Protobuf type {@code trpc.TrpcStreamInitRequestMeta}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:trpc.TrpcStreamInitRequestMeta)
        com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMetaOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_TrpcStreamInitRequestMeta_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 5:
            return internalGetTransInfo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 5:
            return internalGetMutableTransInfo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_TrpcStreamInitRequestMeta_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta.class, com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta.Builder.class);
      }

      // Construct using com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        caller_ = com.google.protobuf.ByteString.EMPTY;

        callee_ = com.google.protobuf.ByteString.EMPTY;

        func_ = com.google.protobuf.ByteString.EMPTY;

        messageType_ = 0;

        internalGetMutableTransInfo().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_TrpcStreamInitRequestMeta_descriptor;
      }

      @java.lang.Override
      public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta getDefaultInstanceForType() {
        return com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta.getDefaultInstance();
      }

      @java.lang.Override
      public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta build() {
        com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta buildPartial() {
        com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta result = new com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta(this);
        int from_bitField0_ = bitField0_;
        result.caller_ = caller_;
        result.callee_ = callee_;
        result.func_ = func_;
        result.messageType_ = messageType_;
        result.transInfo_ = internalGetTransInfo();
        result.transInfo_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta) {
          return mergeFrom((com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta other) {
        if (other == com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta.getDefaultInstance()) return this;
        if (other.getCaller() != com.google.protobuf.ByteString.EMPTY) {
          setCaller(other.getCaller());
        }
        if (other.getCallee() != com.google.protobuf.ByteString.EMPTY) {
          setCallee(other.getCallee());
        }
        if (other.getFunc() != com.google.protobuf.ByteString.EMPTY) {
          setFunc(other.getFunc());
        }
        if (other.getMessageType() != 0) {
          setMessageType(other.getMessageType());
        }
        internalGetMutableTransInfo().mergeFrom(
            other.internalGetTransInfo());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString caller_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Caller name
       * The specification format: trpc.application_name.server_name.proto_service_name, 4 segments
       * </pre>
       *
       * <code>bytes caller = 1;</code>
       * @return The caller.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getCaller() {
        return caller_;
      }
      /**
       * <pre>
       * Caller name
       * The specification format: trpc.application_name.server_name.proto_service_name, 4 segments
       * </pre>
       *
       * <code>bytes caller = 1;</code>
       * @param value The caller to set.
       * @return This builder for chaining.
       */
      public Builder setCaller(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        caller_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Caller name
       * The specification format: trpc.application_name.server_name.proto_service_name, 4 segments
       * </pre>
       *
       * <code>bytes caller = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCaller() {
        
        caller_ = getDefaultInstance().getCaller();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString callee_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Callee name
       * The specification format: trpc.application_name.server_name.proto_service_name[.interface_name]
       * </pre>
       *
       * <code>bytes callee = 2;</code>
       * @return The callee.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getCallee() {
        return callee_;
      }
      /**
       * <pre>
       * Callee name
       * The specification format: trpc.application_name.server_name.proto_service_name[.interface_name]
       * </pre>
       *
       * <code>bytes callee = 2;</code>
       * @param value The callee to set.
       * @return This builder for chaining.
       */
      public Builder setCallee(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        callee_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Callee name
       * The specification format: trpc.application_name.server_name.proto_service_name[.interface_name]
       * </pre>
       *
       * <code>bytes callee = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCallee() {
        
        callee_ = getDefaultInstance().getCallee();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString func_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Interface name of callee
       * The specification format: /package.service_name/interface_name
       * </pre>
       *
       * <code>bytes func = 3;</code>
       * @return The func.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getFunc() {
        return func_;
      }
      /**
       * <pre>
       * Interface name of callee
       * The specification format: /package.service_name/interface_name
       * </pre>
       *
       * <code>bytes func = 3;</code>
       * @param value The func to set.
       * @return This builder for chaining.
       */
      public Builder setFunc(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        func_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Interface name of callee
       * The specification format: /package.service_name/interface_name
       * </pre>
       *
       * <code>bytes func = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearFunc() {
        
        func_ = getDefaultInstance().getFunc();
        onChanged();
        return this;
      }

      private int messageType_ ;
      /**
       * <pre>
       * The message type of the transparent transmission information
       * such as tracing, dyeing key, gray, authentication, multi-environment, set name, etc.
       * The specific value corresponds to `TrpcMessageType`
       * </pre>
       *
       * <code>uint32 message_type = 4;</code>
       * @return The messageType.
       */
      @java.lang.Override
      public int getMessageType() {
        return messageType_;
      }
      /**
       * <pre>
       * The message type of the transparent transmission information
       * such as tracing, dyeing key, gray, authentication, multi-environment, set name, etc.
       * The specific value corresponds to `TrpcMessageType`
       * </pre>
       *
       * <code>uint32 message_type = 4;</code>
       * @param value The messageType to set.
       * @return This builder for chaining.
       */
      public Builder setMessageType(int value) {
        
        messageType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The message type of the transparent transmission information
       * such as tracing, dyeing key, gray, authentication, multi-environment, set name, etc.
       * The specific value corresponds to `TrpcMessageType`
       * </pre>
       *
       * <code>uint32 message_type = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMessageType() {
        
        messageType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, com.google.protobuf.ByteString> transInfo_;
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetTransInfo() {
        if (transInfo_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              TransInfoDefaultEntryHolder.defaultEntry);
        }
        return transInfo_;
      }
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetMutableTransInfo() {
        onChanged();;
        if (transInfo_ == null) {
          transInfo_ = com.google.protobuf.MapField.newMapField(
              TransInfoDefaultEntryHolder.defaultEntry);
        }
        if (!transInfo_.isMutable()) {
          transInfo_ = transInfo_.copy();
        }
        return transInfo_;
      }

      public int getTransInfoCount() {
        return internalGetTransInfo().getMap().size();
      }
      /**
       * <pre>
       * The information key-value pair transparently transmitted by the framework
       * Currently divided into two parts:
       * 1 part is the information to be transparently transmitted by the framework layer,
       * and the name of the key must be started with `trpc-``
       * 2 part is the information to be transparently transmitted by the business layer,
       * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
       * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
       */

      @java.lang.Override
      public boolean containsTransInfo(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetTransInfo().getMap().containsKey(key);
      }
      /**
       * Use {@link #getTransInfoMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getTransInfo() {
        return getTransInfoMap();
      }
      /**
       * <pre>
       * The information key-value pair transparently transmitted by the framework
       * Currently divided into two parts:
       * 1 part is the information to be transparently transmitted by the framework layer,
       * and the name of the key must be started with `trpc-``
       * 2 part is the information to be transparently transmitted by the business layer,
       * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
       * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getTransInfoMap() {
        return internalGetTransInfo().getMap();
      }
      /**
       * <pre>
       * The information key-value pair transparently transmitted by the framework
       * Currently divided into two parts:
       * 1 part is the information to be transparently transmitted by the framework layer,
       * and the name of the key must be started with `trpc-``
       * 2 part is the information to be transparently transmitted by the business layer,
       * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
       * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
       */
      @java.lang.Override

      public com.google.protobuf.ByteString getTransInfoOrDefault(
          java.lang.String key,
          com.google.protobuf.ByteString defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetTransInfo().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * The information key-value pair transparently transmitted by the framework
       * Currently divided into two parts:
       * 1 part is the information to be transparently transmitted by the framework layer,
       * and the name of the key must be started with `trpc-``
       * 2 part is the information to be transparently transmitted by the business layer,
       * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
       * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
       */
      @java.lang.Override

      public com.google.protobuf.ByteString getTransInfoOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetTransInfo().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearTransInfo() {
        internalGetMutableTransInfo().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * The information key-value pair transparently transmitted by the framework
       * Currently divided into two parts:
       * 1 part is the information to be transparently transmitted by the framework layer,
       * and the name of the key must be started with `trpc-``
       * 2 part is the information to be transparently transmitted by the business layer,
       * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
       * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
       */

      public Builder removeTransInfo(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableTransInfo().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString>
      getMutableTransInfo() {
        return internalGetMutableTransInfo().getMutableMap();
      }
      /**
       * <pre>
       * The information key-value pair transparently transmitted by the framework
       * Currently divided into two parts:
       * 1 part is the information to be transparently transmitted by the framework layer,
       * and the name of the key must be started with `trpc-``
       * 2 part is the information to be transparently transmitted by the business layer,
       * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
       * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
       */
      public Builder putTransInfo(
          java.lang.String key,
          com.google.protobuf.ByteString value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableTransInfo().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * The information key-value pair transparently transmitted by the framework
       * Currently divided into two parts:
       * 1 part is the information to be transparently transmitted by the framework layer,
       * and the name of the key must be started with `trpc-``
       * 2 part is the information to be transparently transmitted by the business layer,
       * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
       * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
       */

      public Builder putAllTransInfo(
          java.util.Map<java.lang.String, com.google.protobuf.ByteString> values) {
        internalGetMutableTransInfo().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:trpc.TrpcStreamInitRequestMeta)
    }

    // @@protoc_insertion_point(class_scope:trpc.TrpcStreamInitRequestMeta)
    private static final com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta();
    }

    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TrpcStreamInitRequestMeta>
        PARSER = new com.google.protobuf.AbstractParser<TrpcStreamInitRequestMeta>() {
      @java.lang.Override
      public TrpcStreamInitRequestMeta parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TrpcStreamInitRequestMeta(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TrpcStreamInitRequestMeta> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TrpcStreamInitRequestMeta> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitRequestMeta getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TrpcStreamInitResponseMetaOrBuilder extends
      // @@protoc_insertion_point(interface_extends:trpc.TrpcStreamInitResponseMeta)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Error code
     * The specific value corresponds to `TrpcRetCode`
     * </pre>
     *
     * <code>int32 ret = 1;</code>
     * @return The ret.
     */
    int getRet();

    /**
     * <pre>
     * The result information when the call fails
     * </pre>
     *
     * <code>bytes error_msg = 2;</code>
     * @return The errorMsg.
     */
    com.google.protobuf.ByteString getErrorMsg();
  }
  /**
   * <pre>
   * The response meta information definition of stream `INIT` frame
   * </pre>
   *
   * Protobuf type {@code trpc.TrpcStreamInitResponseMeta}
   */
  public static final class TrpcStreamInitResponseMeta extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:trpc.TrpcStreamInitResponseMeta)
      TrpcStreamInitResponseMetaOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TrpcStreamInitResponseMeta.newBuilder() to construct.
    private TrpcStreamInitResponseMeta(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TrpcStreamInitResponseMeta() {
      errorMsg_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TrpcStreamInitResponseMeta();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TrpcStreamInitResponseMeta(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              ret_ = input.readInt32();
              break;
            }
            case 18: {

              errorMsg_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_TrpcStreamInitResponseMeta_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_TrpcStreamInitResponseMeta_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta.class, com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta.Builder.class);
    }

    public static final int RET_FIELD_NUMBER = 1;
    private int ret_;
    /**
     * <pre>
     * Error code
     * The specific value corresponds to `TrpcRetCode`
     * </pre>
     *
     * <code>int32 ret = 1;</code>
     * @return The ret.
     */
    @java.lang.Override
    public int getRet() {
      return ret_;
    }

    public static final int ERROR_MSG_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString errorMsg_;
    /**
     * <pre>
     * The result information when the call fails
     * </pre>
     *
     * <code>bytes error_msg = 2;</code>
     * @return The errorMsg.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getErrorMsg() {
      return errorMsg_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (ret_ != 0) {
        output.writeInt32(1, ret_);
      }
      if (!errorMsg_.isEmpty()) {
        output.writeBytes(2, errorMsg_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (ret_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, ret_);
      }
      if (!errorMsg_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, errorMsg_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta)) {
        return super.equals(obj);
      }
      com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta other = (com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta) obj;

      if (getRet()
          != other.getRet()) return false;
      if (!getErrorMsg()
          .equals(other.getErrorMsg())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RET_FIELD_NUMBER;
      hash = (53 * hash) + getRet();
      hash = (37 * hash) + ERROR_MSG_FIELD_NUMBER;
      hash = (53 * hash) + getErrorMsg().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The response meta information definition of stream `INIT` frame
     * </pre>
     *
     * Protobuf type {@code trpc.TrpcStreamInitResponseMeta}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:trpc.TrpcStreamInitResponseMeta)
        com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMetaOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_TrpcStreamInitResponseMeta_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_TrpcStreamInitResponseMeta_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta.class, com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta.Builder.class);
      }

      // Construct using com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        ret_ = 0;

        errorMsg_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_TrpcStreamInitResponseMeta_descriptor;
      }

      @java.lang.Override
      public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta getDefaultInstanceForType() {
        return com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta.getDefaultInstance();
      }

      @java.lang.Override
      public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta build() {
        com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta buildPartial() {
        com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta result = new com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta(this);
        result.ret_ = ret_;
        result.errorMsg_ = errorMsg_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta) {
          return mergeFrom((com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta other) {
        if (other == com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta.getDefaultInstance()) return this;
        if (other.getRet() != 0) {
          setRet(other.getRet());
        }
        if (other.getErrorMsg() != com.google.protobuf.ByteString.EMPTY) {
          setErrorMsg(other.getErrorMsg());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int ret_ ;
      /**
       * <pre>
       * Error code
       * The specific value corresponds to `TrpcRetCode`
       * </pre>
       *
       * <code>int32 ret = 1;</code>
       * @return The ret.
       */
      @java.lang.Override
      public int getRet() {
        return ret_;
      }
      /**
       * <pre>
       * Error code
       * The specific value corresponds to `TrpcRetCode`
       * </pre>
       *
       * <code>int32 ret = 1;</code>
       * @param value The ret to set.
       * @return This builder for chaining.
       */
      public Builder setRet(int value) {
        
        ret_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Error code
       * The specific value corresponds to `TrpcRetCode`
       * </pre>
       *
       * <code>int32 ret = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRet() {
        
        ret_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString errorMsg_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The result information when the call fails
       * </pre>
       *
       * <code>bytes error_msg = 2;</code>
       * @return The errorMsg.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getErrorMsg() {
        return errorMsg_;
      }
      /**
       * <pre>
       * The result information when the call fails
       * </pre>
       *
       * <code>bytes error_msg = 2;</code>
       * @param value The errorMsg to set.
       * @return This builder for chaining.
       */
      public Builder setErrorMsg(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        errorMsg_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The result information when the call fails
       * </pre>
       *
       * <code>bytes error_msg = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearErrorMsg() {
        
        errorMsg_ = getDefaultInstance().getErrorMsg();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:trpc.TrpcStreamInitResponseMeta)
    }

    // @@protoc_insertion_point(class_scope:trpc.TrpcStreamInitResponseMeta)
    private static final com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta();
    }

    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TrpcStreamInitResponseMeta>
        PARSER = new com.google.protobuf.AbstractParser<TrpcStreamInitResponseMeta>() {
      @java.lang.Override
      public TrpcStreamInitResponseMeta parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TrpcStreamInitResponseMeta(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TrpcStreamInitResponseMeta> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TrpcStreamInitResponseMeta> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamInitResponseMeta getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TrpcStreamFeedBackMetaOrBuilder extends
      // @@protoc_insertion_point(interface_extends:trpc.TrpcStreamFeedBackMeta)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * increased window size
     * </pre>
     *
     * <code>uint32 window_size_increment = 1;</code>
     * @return The windowSizeIncrement.
     */
    int getWindowSizeIncrement();
  }
  /**
   * <pre>
   * The meta information definition of stream `FEEDBACK` frame
   * </pre>
   *
   * Protobuf type {@code trpc.TrpcStreamFeedBackMeta}
   */
  public static final class TrpcStreamFeedBackMeta extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:trpc.TrpcStreamFeedBackMeta)
      TrpcStreamFeedBackMetaOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TrpcStreamFeedBackMeta.newBuilder() to construct.
    private TrpcStreamFeedBackMeta(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TrpcStreamFeedBackMeta() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TrpcStreamFeedBackMeta();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TrpcStreamFeedBackMeta(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              windowSizeIncrement_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_TrpcStreamFeedBackMeta_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_TrpcStreamFeedBackMeta_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta.class, com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta.Builder.class);
    }

    public static final int WINDOW_SIZE_INCREMENT_FIELD_NUMBER = 1;
    private int windowSizeIncrement_;
    /**
     * <pre>
     * increased window size
     * </pre>
     *
     * <code>uint32 window_size_increment = 1;</code>
     * @return The windowSizeIncrement.
     */
    @java.lang.Override
    public int getWindowSizeIncrement() {
      return windowSizeIncrement_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (windowSizeIncrement_ != 0) {
        output.writeUInt32(1, windowSizeIncrement_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (windowSizeIncrement_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, windowSizeIncrement_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta)) {
        return super.equals(obj);
      }
      com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta other = (com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta) obj;

      if (getWindowSizeIncrement()
          != other.getWindowSizeIncrement()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + WINDOW_SIZE_INCREMENT_FIELD_NUMBER;
      hash = (53 * hash) + getWindowSizeIncrement();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The meta information definition of stream `FEEDBACK` frame
     * </pre>
     *
     * Protobuf type {@code trpc.TrpcStreamFeedBackMeta}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:trpc.TrpcStreamFeedBackMeta)
        com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMetaOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_TrpcStreamFeedBackMeta_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_TrpcStreamFeedBackMeta_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta.class, com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta.Builder.class);
      }

      // Construct using com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        windowSizeIncrement_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_TrpcStreamFeedBackMeta_descriptor;
      }

      @java.lang.Override
      public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta getDefaultInstanceForType() {
        return com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta.getDefaultInstance();
      }

      @java.lang.Override
      public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta build() {
        com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta buildPartial() {
        com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta result = new com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta(this);
        result.windowSizeIncrement_ = windowSizeIncrement_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta) {
          return mergeFrom((com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta other) {
        if (other == com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta.getDefaultInstance()) return this;
        if (other.getWindowSizeIncrement() != 0) {
          setWindowSizeIncrement(other.getWindowSizeIncrement());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int windowSizeIncrement_ ;
      /**
       * <pre>
       * increased window size
       * </pre>
       *
       * <code>uint32 window_size_increment = 1;</code>
       * @return The windowSizeIncrement.
       */
      @java.lang.Override
      public int getWindowSizeIncrement() {
        return windowSizeIncrement_;
      }
      /**
       * <pre>
       * increased window size
       * </pre>
       *
       * <code>uint32 window_size_increment = 1;</code>
       * @param value The windowSizeIncrement to set.
       * @return This builder for chaining.
       */
      public Builder setWindowSizeIncrement(int value) {
        
        windowSizeIncrement_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * increased window size
       * </pre>
       *
       * <code>uint32 window_size_increment = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearWindowSizeIncrement() {
        
        windowSizeIncrement_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:trpc.TrpcStreamFeedBackMeta)
    }

    // @@protoc_insertion_point(class_scope:trpc.TrpcStreamFeedBackMeta)
    private static final com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta();
    }

    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TrpcStreamFeedBackMeta>
        PARSER = new com.google.protobuf.AbstractParser<TrpcStreamFeedBackMeta>() {
      @java.lang.Override
      public TrpcStreamFeedBackMeta parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TrpcStreamFeedBackMeta(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TrpcStreamFeedBackMeta> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TrpcStreamFeedBackMeta> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamFeedBackMeta getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TrpcStreamCloseMetaOrBuilder extends
      // @@protoc_insertion_point(interface_extends:trpc.TrpcStreamCloseMeta)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type of stream closure, close one end, or close all
     * </pre>
     *
     * <code>int32 close_type = 1;</code>
     * @return The closeType.
     */
    int getCloseType();

    /**
     * <pre>
     * Error code
     * The specific value corresponds to `TrpcRetCode`
     * </pre>
     *
     * <code>int32 ret = 2;</code>
     * @return The ret.
     */
    int getRet();

    /**
     * <pre>
     * The result information when the call fails
     * </pre>
     *
     * <code>bytes msg = 3;</code>
     * @return The msg.
     */
    com.google.protobuf.ByteString getMsg();

    /**
     * <pre>
     * The message type of the transparent transmission information
     * such as tracing, dyeing key, gray, authentication, multi-environment, set name, etc.
     * The specific value corresponds to `TrpcMessageType`
     * </pre>
     *
     * <code>uint32 message_type = 4;</code>
     * @return The messageType.
     */
    int getMessageType();

    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
     */
    int getTransInfoCount();
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
     */
    boolean containsTransInfo(
        java.lang.String key);
    /**
     * Use {@link #getTransInfoMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getTransInfo();
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
     */
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getTransInfoMap();
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
     */

    com.google.protobuf.ByteString getTransInfoOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue);
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
     */

    com.google.protobuf.ByteString getTransInfoOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * The error code of the interface
     * 0 means success, other means failure
     * </pre>
     *
     * <code>int32 func_ret = 6;</code>
     * @return The funcRet.
     */
    int getFuncRet();
  }
  /**
   * <pre>
   * The meta information definition of trpc stream protocol for closing stream
   * </pre>
   *
   * Protobuf type {@code trpc.TrpcStreamCloseMeta}
   */
  public static final class TrpcStreamCloseMeta extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:trpc.TrpcStreamCloseMeta)
      TrpcStreamCloseMetaOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TrpcStreamCloseMeta.newBuilder() to construct.
    private TrpcStreamCloseMeta(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TrpcStreamCloseMeta() {
      msg_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TrpcStreamCloseMeta();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TrpcStreamCloseMeta(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              closeType_ = input.readInt32();
              break;
            }
            case 16: {

              ret_ = input.readInt32();
              break;
            }
            case 26: {

              msg_ = input.readBytes();
              break;
            }
            case 32: {

              messageType_ = input.readUInt32();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                transInfo_ = com.google.protobuf.MapField.newMapField(
                    TransInfoDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
              transInfo__ = input.readMessage(
                  TransInfoDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              transInfo_.getMutableMap().put(
                  transInfo__.getKey(), transInfo__.getValue());
              break;
            }
            case 48: {

              funcRet_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_TrpcStreamCloseMeta_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetTransInfo();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_TrpcStreamCloseMeta_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta.class, com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta.Builder.class);
    }

    public static final int CLOSE_TYPE_FIELD_NUMBER = 1;
    private int closeType_;
    /**
     * <pre>
     * The type of stream closure, close one end, or close all
     * </pre>
     *
     * <code>int32 close_type = 1;</code>
     * @return The closeType.
     */
    @java.lang.Override
    public int getCloseType() {
      return closeType_;
    }

    public static final int RET_FIELD_NUMBER = 2;
    private int ret_;
    /**
     * <pre>
     * Error code
     * The specific value corresponds to `TrpcRetCode`
     * </pre>
     *
     * <code>int32 ret = 2;</code>
     * @return The ret.
     */
    @java.lang.Override
    public int getRet() {
      return ret_;
    }

    public static final int MSG_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString msg_;
    /**
     * <pre>
     * The result information when the call fails
     * </pre>
     *
     * <code>bytes msg = 3;</code>
     * @return The msg.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getMsg() {
      return msg_;
    }

    public static final int MESSAGE_TYPE_FIELD_NUMBER = 4;
    private int messageType_;
    /**
     * <pre>
     * The message type of the transparent transmission information
     * such as tracing, dyeing key, gray, authentication, multi-environment, set name, etc.
     * The specific value corresponds to `TrpcMessageType`
     * </pre>
     *
     * <code>uint32 message_type = 4;</code>
     * @return The messageType.
     */
    @java.lang.Override
    public int getMessageType() {
      return messageType_;
    }

    public static final int TRANS_INFO_FIELD_NUMBER = 5;
    private static final class TransInfoDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, com.google.protobuf.ByteString>newDefaultInstance(
                  com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_TrpcStreamCloseMeta_TransInfoEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    private com.google.protobuf.MapField<
        java.lang.String, com.google.protobuf.ByteString> transInfo_;
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
    internalGetTransInfo() {
      if (transInfo_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TransInfoDefaultEntryHolder.defaultEntry);
      }
      return transInfo_;
    }

    public int getTransInfoCount() {
      return internalGetTransInfo().getMap().size();
    }
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
     */

    @java.lang.Override
    public boolean containsTransInfo(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetTransInfo().getMap().containsKey(key);
    }
    /**
     * Use {@link #getTransInfoMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getTransInfo() {
      return getTransInfoMap();
    }
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getTransInfoMap() {
      return internalGetTransInfo().getMap();
    }
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getTransInfoOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetTransInfo().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getTransInfoOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetTransInfo().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int FUNC_RET_FIELD_NUMBER = 6;
    private int funcRet_;
    /**
     * <pre>
     * The error code of the interface
     * 0 means success, other means failure
     * </pre>
     *
     * <code>int32 func_ret = 6;</code>
     * @return The funcRet.
     */
    @java.lang.Override
    public int getFuncRet() {
      return funcRet_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (closeType_ != 0) {
        output.writeInt32(1, closeType_);
      }
      if (ret_ != 0) {
        output.writeInt32(2, ret_);
      }
      if (!msg_.isEmpty()) {
        output.writeBytes(3, msg_);
      }
      if (messageType_ != 0) {
        output.writeUInt32(4, messageType_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetTransInfo(),
          TransInfoDefaultEntryHolder.defaultEntry,
          5);
      if (funcRet_ != 0) {
        output.writeInt32(6, funcRet_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (closeType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, closeType_);
      }
      if (ret_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, ret_);
      }
      if (!msg_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, msg_);
      }
      if (messageType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, messageType_);
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ByteString> entry
           : internalGetTransInfo().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
        transInfo__ = TransInfoDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, transInfo__);
      }
      if (funcRet_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, funcRet_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta)) {
        return super.equals(obj);
      }
      com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta other = (com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta) obj;

      if (getCloseType()
          != other.getCloseType()) return false;
      if (getRet()
          != other.getRet()) return false;
      if (!getMsg()
          .equals(other.getMsg())) return false;
      if (getMessageType()
          != other.getMessageType()) return false;
      if (!internalGetTransInfo().equals(
          other.internalGetTransInfo())) return false;
      if (getFuncRet()
          != other.getFuncRet()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CLOSE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getCloseType();
      hash = (37 * hash) + RET_FIELD_NUMBER;
      hash = (53 * hash) + getRet();
      hash = (37 * hash) + MSG_FIELD_NUMBER;
      hash = (53 * hash) + getMsg().hashCode();
      hash = (37 * hash) + MESSAGE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getMessageType();
      if (!internalGetTransInfo().getMap().isEmpty()) {
        hash = (37 * hash) + TRANS_INFO_FIELD_NUMBER;
        hash = (53 * hash) + internalGetTransInfo().hashCode();
      }
      hash = (37 * hash) + FUNC_RET_FIELD_NUMBER;
      hash = (53 * hash) + getFuncRet();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The meta information definition of trpc stream protocol for closing stream
     * </pre>
     *
     * Protobuf type {@code trpc.TrpcStreamCloseMeta}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:trpc.TrpcStreamCloseMeta)
        com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMetaOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_TrpcStreamCloseMeta_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 5:
            return internalGetTransInfo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 5:
            return internalGetMutableTransInfo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_TrpcStreamCloseMeta_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta.class, com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta.Builder.class);
      }

      // Construct using com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        closeType_ = 0;

        ret_ = 0;

        msg_ = com.google.protobuf.ByteString.EMPTY;

        messageType_ = 0;

        internalGetMutableTransInfo().clear();
        funcRet_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_TrpcStreamCloseMeta_descriptor;
      }

      @java.lang.Override
      public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta getDefaultInstanceForType() {
        return com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta.getDefaultInstance();
      }

      @java.lang.Override
      public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta build() {
        com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta buildPartial() {
        com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta result = new com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta(this);
        int from_bitField0_ = bitField0_;
        result.closeType_ = closeType_;
        result.ret_ = ret_;
        result.msg_ = msg_;
        result.messageType_ = messageType_;
        result.transInfo_ = internalGetTransInfo();
        result.transInfo_.makeImmutable();
        result.funcRet_ = funcRet_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta) {
          return mergeFrom((com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta other) {
        if (other == com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta.getDefaultInstance()) return this;
        if (other.getCloseType() != 0) {
          setCloseType(other.getCloseType());
        }
        if (other.getRet() != 0) {
          setRet(other.getRet());
        }
        if (other.getMsg() != com.google.protobuf.ByteString.EMPTY) {
          setMsg(other.getMsg());
        }
        if (other.getMessageType() != 0) {
          setMessageType(other.getMessageType());
        }
        internalGetMutableTransInfo().mergeFrom(
            other.internalGetTransInfo());
        if (other.getFuncRet() != 0) {
          setFuncRet(other.getFuncRet());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int closeType_ ;
      /**
       * <pre>
       * The type of stream closure, close one end, or close all
       * </pre>
       *
       * <code>int32 close_type = 1;</code>
       * @return The closeType.
       */
      @java.lang.Override
      public int getCloseType() {
        return closeType_;
      }
      /**
       * <pre>
       * The type of stream closure, close one end, or close all
       * </pre>
       *
       * <code>int32 close_type = 1;</code>
       * @param value The closeType to set.
       * @return This builder for chaining.
       */
      public Builder setCloseType(int value) {
        
        closeType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of stream closure, close one end, or close all
       * </pre>
       *
       * <code>int32 close_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCloseType() {
        
        closeType_ = 0;
        onChanged();
        return this;
      }

      private int ret_ ;
      /**
       * <pre>
       * Error code
       * The specific value corresponds to `TrpcRetCode`
       * </pre>
       *
       * <code>int32 ret = 2;</code>
       * @return The ret.
       */
      @java.lang.Override
      public int getRet() {
        return ret_;
      }
      /**
       * <pre>
       * Error code
       * The specific value corresponds to `TrpcRetCode`
       * </pre>
       *
       * <code>int32 ret = 2;</code>
       * @param value The ret to set.
       * @return This builder for chaining.
       */
      public Builder setRet(int value) {
        
        ret_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Error code
       * The specific value corresponds to `TrpcRetCode`
       * </pre>
       *
       * <code>int32 ret = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRet() {
        
        ret_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString msg_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The result information when the call fails
       * </pre>
       *
       * <code>bytes msg = 3;</code>
       * @return The msg.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getMsg() {
        return msg_;
      }
      /**
       * <pre>
       * The result information when the call fails
       * </pre>
       *
       * <code>bytes msg = 3;</code>
       * @param value The msg to set.
       * @return This builder for chaining.
       */
      public Builder setMsg(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        msg_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The result information when the call fails
       * </pre>
       *
       * <code>bytes msg = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMsg() {
        
        msg_ = getDefaultInstance().getMsg();
        onChanged();
        return this;
      }

      private int messageType_ ;
      /**
       * <pre>
       * The message type of the transparent transmission information
       * such as tracing, dyeing key, gray, authentication, multi-environment, set name, etc.
       * The specific value corresponds to `TrpcMessageType`
       * </pre>
       *
       * <code>uint32 message_type = 4;</code>
       * @return The messageType.
       */
      @java.lang.Override
      public int getMessageType() {
        return messageType_;
      }
      /**
       * <pre>
       * The message type of the transparent transmission information
       * such as tracing, dyeing key, gray, authentication, multi-environment, set name, etc.
       * The specific value corresponds to `TrpcMessageType`
       * </pre>
       *
       * <code>uint32 message_type = 4;</code>
       * @param value The messageType to set.
       * @return This builder for chaining.
       */
      public Builder setMessageType(int value) {
        
        messageType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The message type of the transparent transmission information
       * such as tracing, dyeing key, gray, authentication, multi-environment, set name, etc.
       * The specific value corresponds to `TrpcMessageType`
       * </pre>
       *
       * <code>uint32 message_type = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMessageType() {
        
        messageType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, com.google.protobuf.ByteString> transInfo_;
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetTransInfo() {
        if (transInfo_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              TransInfoDefaultEntryHolder.defaultEntry);
        }
        return transInfo_;
      }
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetMutableTransInfo() {
        onChanged();;
        if (transInfo_ == null) {
          transInfo_ = com.google.protobuf.MapField.newMapField(
              TransInfoDefaultEntryHolder.defaultEntry);
        }
        if (!transInfo_.isMutable()) {
          transInfo_ = transInfo_.copy();
        }
        return transInfo_;
      }

      public int getTransInfoCount() {
        return internalGetTransInfo().getMap().size();
      }
      /**
       * <pre>
       * The information key-value pair transparently transmitted by the framework
       * Currently divided into two parts:
       * 1 part is the information to be transparently transmitted by the framework layer,
       * and the name of the key must be started with `trpc-``
       * 2 part is the information to be transparently transmitted by the business layer,
       * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
       * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
       */

      @java.lang.Override
      public boolean containsTransInfo(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetTransInfo().getMap().containsKey(key);
      }
      /**
       * Use {@link #getTransInfoMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getTransInfo() {
        return getTransInfoMap();
      }
      /**
       * <pre>
       * The information key-value pair transparently transmitted by the framework
       * Currently divided into two parts:
       * 1 part is the information to be transparently transmitted by the framework layer,
       * and the name of the key must be started with `trpc-``
       * 2 part is the information to be transparently transmitted by the business layer,
       * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
       * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getTransInfoMap() {
        return internalGetTransInfo().getMap();
      }
      /**
       * <pre>
       * The information key-value pair transparently transmitted by the framework
       * Currently divided into two parts:
       * 1 part is the information to be transparently transmitted by the framework layer,
       * and the name of the key must be started with `trpc-``
       * 2 part is the information to be transparently transmitted by the business layer,
       * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
       * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
       */
      @java.lang.Override

      public com.google.protobuf.ByteString getTransInfoOrDefault(
          java.lang.String key,
          com.google.protobuf.ByteString defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetTransInfo().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * The information key-value pair transparently transmitted by the framework
       * Currently divided into two parts:
       * 1 part is the information to be transparently transmitted by the framework layer,
       * and the name of the key must be started with `trpc-``
       * 2 part is the information to be transparently transmitted by the business layer,
       * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
       * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
       */
      @java.lang.Override

      public com.google.protobuf.ByteString getTransInfoOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetTransInfo().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearTransInfo() {
        internalGetMutableTransInfo().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * The information key-value pair transparently transmitted by the framework
       * Currently divided into two parts:
       * 1 part is the information to be transparently transmitted by the framework layer,
       * and the name of the key must be started with `trpc-``
       * 2 part is the information to be transparently transmitted by the business layer,
       * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
       * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
       */

      public Builder removeTransInfo(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableTransInfo().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString>
      getMutableTransInfo() {
        return internalGetMutableTransInfo().getMutableMap();
      }
      /**
       * <pre>
       * The information key-value pair transparently transmitted by the framework
       * Currently divided into two parts:
       * 1 part is the information to be transparently transmitted by the framework layer,
       * and the name of the key must be started with `trpc-``
       * 2 part is the information to be transparently transmitted by the business layer,
       * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
       * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
       */
      public Builder putTransInfo(
          java.lang.String key,
          com.google.protobuf.ByteString value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableTransInfo().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * The information key-value pair transparently transmitted by the framework
       * Currently divided into two parts:
       * 1 part is the information to be transparently transmitted by the framework layer,
       * and the name of the key must be started with `trpc-``
       * 2 part is the information to be transparently transmitted by the business layer,
       * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
       * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; trans_info = 5;</code>
       */

      public Builder putAllTransInfo(
          java.util.Map<java.lang.String, com.google.protobuf.ByteString> values) {
        internalGetMutableTransInfo().getMutableMap()
            .putAll(values);
        return this;
      }

      private int funcRet_ ;
      /**
       * <pre>
       * The error code of the interface
       * 0 means success, other means failure
       * </pre>
       *
       * <code>int32 func_ret = 6;</code>
       * @return The funcRet.
       */
      @java.lang.Override
      public int getFuncRet() {
        return funcRet_;
      }
      /**
       * <pre>
       * The error code of the interface
       * 0 means success, other means failure
       * </pre>
       *
       * <code>int32 func_ret = 6;</code>
       * @param value The funcRet to set.
       * @return This builder for chaining.
       */
      public Builder setFuncRet(int value) {
        
        funcRet_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The error code of the interface
       * 0 means success, other means failure
       * </pre>
       *
       * <code>int32 func_ret = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearFuncRet() {
        
        funcRet_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:trpc.TrpcStreamCloseMeta)
    }

    // @@protoc_insertion_point(class_scope:trpc.TrpcStreamCloseMeta)
    private static final com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta();
    }

    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TrpcStreamCloseMeta>
        PARSER = new com.google.protobuf.AbstractParser<TrpcStreamCloseMeta>() {
      @java.lang.Override
      public TrpcStreamCloseMeta parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TrpcStreamCloseMeta(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TrpcStreamCloseMeta> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TrpcStreamCloseMeta> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tencent.trpc.proto.standard.common.TRPCProtocol.TrpcStreamCloseMeta getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestProtocolOrBuilder extends
      // @@protoc_insertion_point(interface_extends:trpc.RequestProtocol)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The version of protocol
     * The specific value corresponds to `TrpcProtoVersion`
     * </pre>
     *
     * <code>uint32 version = 1;</code>
     * @return The version.
     */
    int getVersion();

    /**
     * <pre>
     * Call type
     * eg: unary, one-way
     * The specific value corresponds to `TrpcCallType`
     * </pre>
     *
     * <code>uint32 call_type = 2;</code>
     * @return The callType.
     */
    int getCallType();

    /**
     * <pre>
     * The unique id of the request(on the conneciton)
     * </pre>
     *
     * <code>uint32 request_id = 3;</code>
     * @return The requestId.
     */
    int getRequestId();

    /**
     * <pre>
     * The timeout of the request(ms)
     * </pre>
     *
     * <code>uint32 timeout = 4;</code>
     * @return The timeout.
     */
    int getTimeout();

    /**
     * <pre>
     * Caller name
     * The specification format: trpc.application_name.server_name.proto_service_name, 4 segments
     * </pre>
     *
     * <code>bytes caller = 5;</code>
     * @return The caller.
     */
    com.google.protobuf.ByteString getCaller();

    /**
     * <pre>
     * Callee name
     * The specification format: trpc.application_name.server_name.proto_service_name[.interface_name]
     * </pre>
     *
     * <code>bytes callee = 6;</code>
     * @return The callee.
     */
    com.google.protobuf.ByteString getCallee();

    /**
     * <pre>
     * Interface name of callee
     * The specification format: /package.service_name/interface_name
     * </pre>
     *
     * <code>bytes func = 7;</code>
     * @return The func.
     */
    com.google.protobuf.ByteString getFunc();

    /**
     * <pre>
     * The message type of the transparent transmission information
     * such as tracing, dyeing key, gray, authentication, multi-environment, set name, etc.
     * The specific value corresponds to `TrpcMessageType`
     * </pre>
     *
     * <code>uint32 message_type = 8;</code>
     * @return The messageType.
     */
    int getMessageType();

    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 9;</code>
     */
    int getTransInfoCount();
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 9;</code>
     */
    boolean containsTransInfo(
        java.lang.String key);
    /**
     * Use {@link #getTransInfoMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getTransInfo();
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 9;</code>
     */
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getTransInfoMap();
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 9;</code>
     */

    com.google.protobuf.ByteString getTransInfoOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue);
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 9;</code>
     */

    com.google.protobuf.ByteString getTransInfoOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * The serialization type of the request data
     * eg: proto/json/.., default proto
     * The specific value corresponds to `TrpcContentEncodeType`
     * </pre>
     *
     * <code>uint32 content_type = 10;</code>
     * @return The contentType.
     */
    int getContentType();

    /**
     * <pre>
     * The compression type of the requested data
     * eg: gzip/snappy/..., not used by default
     * The specific value corresponds to `TrpcCompressType`
     * </pre>
     *
     * <code>uint32 content_encoding = 11;</code>
     * @return The contentEncoding.
     */
    int getContentEncoding();

    /**
     * <pre>
     * The size of attachment data
     * </pre>
     *
     * <code>uint32 attachment_size = 12;</code>
     * @return The attachmentSize.
     */
    int getAttachmentSize();
  }
  /**
   * <pre>
   * The request header for unary
   * </pre>
   *
   * Protobuf type {@code trpc.RequestProtocol}
   */
  public static final class RequestProtocol extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:trpc.RequestProtocol)
      RequestProtocolOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RequestProtocol.newBuilder() to construct.
    private RequestProtocol(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RequestProtocol() {
      caller_ = com.google.protobuf.ByteString.EMPTY;
      callee_ = com.google.protobuf.ByteString.EMPTY;
      func_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RequestProtocol();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RequestProtocol(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              version_ = input.readUInt32();
              break;
            }
            case 16: {

              callType_ = input.readUInt32();
              break;
            }
            case 24: {

              requestId_ = input.readUInt32();
              break;
            }
            case 32: {

              timeout_ = input.readUInt32();
              break;
            }
            case 42: {

              caller_ = input.readBytes();
              break;
            }
            case 50: {

              callee_ = input.readBytes();
              break;
            }
            case 58: {

              func_ = input.readBytes();
              break;
            }
            case 64: {

              messageType_ = input.readUInt32();
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                transInfo_ = com.google.protobuf.MapField.newMapField(
                    TransInfoDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
              transInfo__ = input.readMessage(
                  TransInfoDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              transInfo_.getMutableMap().put(
                  transInfo__.getKey(), transInfo__.getValue());
              break;
            }
            case 80: {

              contentType_ = input.readUInt32();
              break;
            }
            case 88: {

              contentEncoding_ = input.readUInt32();
              break;
            }
            case 96: {

              attachmentSize_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_RequestProtocol_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 9:
          return internalGetTransInfo();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_RequestProtocol_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol.class, com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol.Builder.class);
    }

    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <pre>
     * The version of protocol
     * The specific value corresponds to `TrpcProtoVersion`
     * </pre>
     *
     * <code>uint32 version = 1;</code>
     * @return The version.
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }

    public static final int CALL_TYPE_FIELD_NUMBER = 2;
    private int callType_;
    /**
     * <pre>
     * Call type
     * eg: unary, one-way
     * The specific value corresponds to `TrpcCallType`
     * </pre>
     *
     * <code>uint32 call_type = 2;</code>
     * @return The callType.
     */
    @java.lang.Override
    public int getCallType() {
      return callType_;
    }

    public static final int REQUEST_ID_FIELD_NUMBER = 3;
    private int requestId_;
    /**
     * <pre>
     * The unique id of the request(on the conneciton)
     * </pre>
     *
     * <code>uint32 request_id = 3;</code>
     * @return The requestId.
     */
    @java.lang.Override
    public int getRequestId() {
      return requestId_;
    }

    public static final int TIMEOUT_FIELD_NUMBER = 4;
    private int timeout_;
    /**
     * <pre>
     * The timeout of the request(ms)
     * </pre>
     *
     * <code>uint32 timeout = 4;</code>
     * @return The timeout.
     */
    @java.lang.Override
    public int getTimeout() {
      return timeout_;
    }

    public static final int CALLER_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString caller_;
    /**
     * <pre>
     * Caller name
     * The specification format: trpc.application_name.server_name.proto_service_name, 4 segments
     * </pre>
     *
     * <code>bytes caller = 5;</code>
     * @return The caller.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getCaller() {
      return caller_;
    }

    public static final int CALLEE_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString callee_;
    /**
     * <pre>
     * Callee name
     * The specification format: trpc.application_name.server_name.proto_service_name[.interface_name]
     * </pre>
     *
     * <code>bytes callee = 6;</code>
     * @return The callee.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getCallee() {
      return callee_;
    }

    public static final int FUNC_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString func_;
    /**
     * <pre>
     * Interface name of callee
     * The specification format: /package.service_name/interface_name
     * </pre>
     *
     * <code>bytes func = 7;</code>
     * @return The func.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getFunc() {
      return func_;
    }

    public static final int MESSAGE_TYPE_FIELD_NUMBER = 8;
    private int messageType_;
    /**
     * <pre>
     * The message type of the transparent transmission information
     * such as tracing, dyeing key, gray, authentication, multi-environment, set name, etc.
     * The specific value corresponds to `TrpcMessageType`
     * </pre>
     *
     * <code>uint32 message_type = 8;</code>
     * @return The messageType.
     */
    @java.lang.Override
    public int getMessageType() {
      return messageType_;
    }

    public static final int TRANS_INFO_FIELD_NUMBER = 9;
    private static final class TransInfoDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, com.google.protobuf.ByteString>newDefaultInstance(
                  com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_RequestProtocol_TransInfoEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    private com.google.protobuf.MapField<
        java.lang.String, com.google.protobuf.ByteString> transInfo_;
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
    internalGetTransInfo() {
      if (transInfo_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TransInfoDefaultEntryHolder.defaultEntry);
      }
      return transInfo_;
    }

    public int getTransInfoCount() {
      return internalGetTransInfo().getMap().size();
    }
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 9;</code>
     */

    @java.lang.Override
    public boolean containsTransInfo(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetTransInfo().getMap().containsKey(key);
    }
    /**
     * Use {@link #getTransInfoMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getTransInfo() {
      return getTransInfoMap();
    }
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 9;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getTransInfoMap() {
      return internalGetTransInfo().getMap();
    }
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 9;</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getTransInfoOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetTransInfo().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 9;</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getTransInfoOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetTransInfo().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int CONTENT_TYPE_FIELD_NUMBER = 10;
    private int contentType_;
    /**
     * <pre>
     * The serialization type of the request data
     * eg: proto/json/.., default proto
     * The specific value corresponds to `TrpcContentEncodeType`
     * </pre>
     *
     * <code>uint32 content_type = 10;</code>
     * @return The contentType.
     */
    @java.lang.Override
    public int getContentType() {
      return contentType_;
    }

    public static final int CONTENT_ENCODING_FIELD_NUMBER = 11;
    private int contentEncoding_;
    /**
     * <pre>
     * The compression type of the requested data
     * eg: gzip/snappy/..., not used by default
     * The specific value corresponds to `TrpcCompressType`
     * </pre>
     *
     * <code>uint32 content_encoding = 11;</code>
     * @return The contentEncoding.
     */
    @java.lang.Override
    public int getContentEncoding() {
      return contentEncoding_;
    }

    public static final int ATTACHMENT_SIZE_FIELD_NUMBER = 12;
    private int attachmentSize_;
    /**
     * <pre>
     * The size of attachment data
     * </pre>
     *
     * <code>uint32 attachment_size = 12;</code>
     * @return The attachmentSize.
     */
    @java.lang.Override
    public int getAttachmentSize() {
      return attachmentSize_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (version_ != 0) {
        output.writeUInt32(1, version_);
      }
      if (callType_ != 0) {
        output.writeUInt32(2, callType_);
      }
      if (requestId_ != 0) {
        output.writeUInt32(3, requestId_);
      }
      if (timeout_ != 0) {
        output.writeUInt32(4, timeout_);
      }
      if (!caller_.isEmpty()) {
        output.writeBytes(5, caller_);
      }
      if (!callee_.isEmpty()) {
        output.writeBytes(6, callee_);
      }
      if (!func_.isEmpty()) {
        output.writeBytes(7, func_);
      }
      if (messageType_ != 0) {
        output.writeUInt32(8, messageType_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetTransInfo(),
          TransInfoDefaultEntryHolder.defaultEntry,
          9);
      if (contentType_ != 0) {
        output.writeUInt32(10, contentType_);
      }
      if (contentEncoding_ != 0) {
        output.writeUInt32(11, contentEncoding_);
      }
      if (attachmentSize_ != 0) {
        output.writeUInt32(12, attachmentSize_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (version_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, version_);
      }
      if (callType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, callType_);
      }
      if (requestId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, requestId_);
      }
      if (timeout_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, timeout_);
      }
      if (!caller_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, caller_);
      }
      if (!callee_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, callee_);
      }
      if (!func_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, func_);
      }
      if (messageType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, messageType_);
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ByteString> entry
           : internalGetTransInfo().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
        transInfo__ = TransInfoDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, transInfo__);
      }
      if (contentType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, contentType_);
      }
      if (contentEncoding_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, contentEncoding_);
      }
      if (attachmentSize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, attachmentSize_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol)) {
        return super.equals(obj);
      }
      com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol other = (com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol) obj;

      if (getVersion()
          != other.getVersion()) return false;
      if (getCallType()
          != other.getCallType()) return false;
      if (getRequestId()
          != other.getRequestId()) return false;
      if (getTimeout()
          != other.getTimeout()) return false;
      if (!getCaller()
          .equals(other.getCaller())) return false;
      if (!getCallee()
          .equals(other.getCallee())) return false;
      if (!getFunc()
          .equals(other.getFunc())) return false;
      if (getMessageType()
          != other.getMessageType()) return false;
      if (!internalGetTransInfo().equals(
          other.internalGetTransInfo())) return false;
      if (getContentType()
          != other.getContentType()) return false;
      if (getContentEncoding()
          != other.getContentEncoding()) return false;
      if (getAttachmentSize()
          != other.getAttachmentSize()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion();
      hash = (37 * hash) + CALL_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getCallType();
      hash = (37 * hash) + REQUEST_ID_FIELD_NUMBER;
      hash = (53 * hash) + getRequestId();
      hash = (37 * hash) + TIMEOUT_FIELD_NUMBER;
      hash = (53 * hash) + getTimeout();
      hash = (37 * hash) + CALLER_FIELD_NUMBER;
      hash = (53 * hash) + getCaller().hashCode();
      hash = (37 * hash) + CALLEE_FIELD_NUMBER;
      hash = (53 * hash) + getCallee().hashCode();
      hash = (37 * hash) + FUNC_FIELD_NUMBER;
      hash = (53 * hash) + getFunc().hashCode();
      hash = (37 * hash) + MESSAGE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getMessageType();
      if (!internalGetTransInfo().getMap().isEmpty()) {
        hash = (37 * hash) + TRANS_INFO_FIELD_NUMBER;
        hash = (53 * hash) + internalGetTransInfo().hashCode();
      }
      hash = (37 * hash) + CONTENT_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getContentType();
      hash = (37 * hash) + CONTENT_ENCODING_FIELD_NUMBER;
      hash = (53 * hash) + getContentEncoding();
      hash = (37 * hash) + ATTACHMENT_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + getAttachmentSize();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The request header for unary
     * </pre>
     *
     * Protobuf type {@code trpc.RequestProtocol}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:trpc.RequestProtocol)
        com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocolOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_RequestProtocol_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 9:
            return internalGetTransInfo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 9:
            return internalGetMutableTransInfo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_RequestProtocol_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol.class, com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol.Builder.class);
      }

      // Construct using com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        version_ = 0;

        callType_ = 0;

        requestId_ = 0;

        timeout_ = 0;

        caller_ = com.google.protobuf.ByteString.EMPTY;

        callee_ = com.google.protobuf.ByteString.EMPTY;

        func_ = com.google.protobuf.ByteString.EMPTY;

        messageType_ = 0;

        internalGetMutableTransInfo().clear();
        contentType_ = 0;

        contentEncoding_ = 0;

        attachmentSize_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_RequestProtocol_descriptor;
      }

      @java.lang.Override
      public com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol getDefaultInstanceForType() {
        return com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol.getDefaultInstance();
      }

      @java.lang.Override
      public com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol build() {
        com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol buildPartial() {
        com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol result = new com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol(this);
        int from_bitField0_ = bitField0_;
        result.version_ = version_;
        result.callType_ = callType_;
        result.requestId_ = requestId_;
        result.timeout_ = timeout_;
        result.caller_ = caller_;
        result.callee_ = callee_;
        result.func_ = func_;
        result.messageType_ = messageType_;
        result.transInfo_ = internalGetTransInfo();
        result.transInfo_.makeImmutable();
        result.contentType_ = contentType_;
        result.contentEncoding_ = contentEncoding_;
        result.attachmentSize_ = attachmentSize_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol) {
          return mergeFrom((com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol other) {
        if (other == com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol.getDefaultInstance()) return this;
        if (other.getVersion() != 0) {
          setVersion(other.getVersion());
        }
        if (other.getCallType() != 0) {
          setCallType(other.getCallType());
        }
        if (other.getRequestId() != 0) {
          setRequestId(other.getRequestId());
        }
        if (other.getTimeout() != 0) {
          setTimeout(other.getTimeout());
        }
        if (other.getCaller() != com.google.protobuf.ByteString.EMPTY) {
          setCaller(other.getCaller());
        }
        if (other.getCallee() != com.google.protobuf.ByteString.EMPTY) {
          setCallee(other.getCallee());
        }
        if (other.getFunc() != com.google.protobuf.ByteString.EMPTY) {
          setFunc(other.getFunc());
        }
        if (other.getMessageType() != 0) {
          setMessageType(other.getMessageType());
        }
        internalGetMutableTransInfo().mergeFrom(
            other.internalGetTransInfo());
        if (other.getContentType() != 0) {
          setContentType(other.getContentType());
        }
        if (other.getContentEncoding() != 0) {
          setContentEncoding(other.getContentEncoding());
        }
        if (other.getAttachmentSize() != 0) {
          setAttachmentSize(other.getAttachmentSize());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int version_ ;
      /**
       * <pre>
       * The version of protocol
       * The specific value corresponds to `TrpcProtoVersion`
       * </pre>
       *
       * <code>uint32 version = 1;</code>
       * @return The version.
       */
      @java.lang.Override
      public int getVersion() {
        return version_;
      }
      /**
       * <pre>
       * The version of protocol
       * The specific value corresponds to `TrpcProtoVersion`
       * </pre>
       *
       * <code>uint32 version = 1;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(int value) {
        
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The version of protocol
       * The specific value corresponds to `TrpcProtoVersion`
       * </pre>
       *
       * <code>uint32 version = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = 0;
        onChanged();
        return this;
      }

      private int callType_ ;
      /**
       * <pre>
       * Call type
       * eg: unary, one-way
       * The specific value corresponds to `TrpcCallType`
       * </pre>
       *
       * <code>uint32 call_type = 2;</code>
       * @return The callType.
       */
      @java.lang.Override
      public int getCallType() {
        return callType_;
      }
      /**
       * <pre>
       * Call type
       * eg: unary, one-way
       * The specific value corresponds to `TrpcCallType`
       * </pre>
       *
       * <code>uint32 call_type = 2;</code>
       * @param value The callType to set.
       * @return This builder for chaining.
       */
      public Builder setCallType(int value) {
        
        callType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Call type
       * eg: unary, one-way
       * The specific value corresponds to `TrpcCallType`
       * </pre>
       *
       * <code>uint32 call_type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCallType() {
        
        callType_ = 0;
        onChanged();
        return this;
      }

      private int requestId_ ;
      /**
       * <pre>
       * The unique id of the request(on the conneciton)
       * </pre>
       *
       * <code>uint32 request_id = 3;</code>
       * @return The requestId.
       */
      @java.lang.Override
      public int getRequestId() {
        return requestId_;
      }
      /**
       * <pre>
       * The unique id of the request(on the conneciton)
       * </pre>
       *
       * <code>uint32 request_id = 3;</code>
       * @param value The requestId to set.
       * @return This builder for chaining.
       */
      public Builder setRequestId(int value) {
        
        requestId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The unique id of the request(on the conneciton)
       * </pre>
       *
       * <code>uint32 request_id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRequestId() {
        
        requestId_ = 0;
        onChanged();
        return this;
      }

      private int timeout_ ;
      /**
       * <pre>
       * The timeout of the request(ms)
       * </pre>
       *
       * <code>uint32 timeout = 4;</code>
       * @return The timeout.
       */
      @java.lang.Override
      public int getTimeout() {
        return timeout_;
      }
      /**
       * <pre>
       * The timeout of the request(ms)
       * </pre>
       *
       * <code>uint32 timeout = 4;</code>
       * @param value The timeout to set.
       * @return This builder for chaining.
       */
      public Builder setTimeout(int value) {
        
        timeout_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timeout of the request(ms)
       * </pre>
       *
       * <code>uint32 timeout = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeout() {
        
        timeout_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString caller_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Caller name
       * The specification format: trpc.application_name.server_name.proto_service_name, 4 segments
       * </pre>
       *
       * <code>bytes caller = 5;</code>
       * @return The caller.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getCaller() {
        return caller_;
      }
      /**
       * <pre>
       * Caller name
       * The specification format: trpc.application_name.server_name.proto_service_name, 4 segments
       * </pre>
       *
       * <code>bytes caller = 5;</code>
       * @param value The caller to set.
       * @return This builder for chaining.
       */
      public Builder setCaller(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        caller_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Caller name
       * The specification format: trpc.application_name.server_name.proto_service_name, 4 segments
       * </pre>
       *
       * <code>bytes caller = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearCaller() {
        
        caller_ = getDefaultInstance().getCaller();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString callee_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Callee name
       * The specification format: trpc.application_name.server_name.proto_service_name[.interface_name]
       * </pre>
       *
       * <code>bytes callee = 6;</code>
       * @return The callee.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getCallee() {
        return callee_;
      }
      /**
       * <pre>
       * Callee name
       * The specification format: trpc.application_name.server_name.proto_service_name[.interface_name]
       * </pre>
       *
       * <code>bytes callee = 6;</code>
       * @param value The callee to set.
       * @return This builder for chaining.
       */
      public Builder setCallee(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        callee_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Callee name
       * The specification format: trpc.application_name.server_name.proto_service_name[.interface_name]
       * </pre>
       *
       * <code>bytes callee = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearCallee() {
        
        callee_ = getDefaultInstance().getCallee();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString func_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Interface name of callee
       * The specification format: /package.service_name/interface_name
       * </pre>
       *
       * <code>bytes func = 7;</code>
       * @return The func.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getFunc() {
        return func_;
      }
      /**
       * <pre>
       * Interface name of callee
       * The specification format: /package.service_name/interface_name
       * </pre>
       *
       * <code>bytes func = 7;</code>
       * @param value The func to set.
       * @return This builder for chaining.
       */
      public Builder setFunc(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        func_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Interface name of callee
       * The specification format: /package.service_name/interface_name
       * </pre>
       *
       * <code>bytes func = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearFunc() {
        
        func_ = getDefaultInstance().getFunc();
        onChanged();
        return this;
      }

      private int messageType_ ;
      /**
       * <pre>
       * The message type of the transparent transmission information
       * such as tracing, dyeing key, gray, authentication, multi-environment, set name, etc.
       * The specific value corresponds to `TrpcMessageType`
       * </pre>
       *
       * <code>uint32 message_type = 8;</code>
       * @return The messageType.
       */
      @java.lang.Override
      public int getMessageType() {
        return messageType_;
      }
      /**
       * <pre>
       * The message type of the transparent transmission information
       * such as tracing, dyeing key, gray, authentication, multi-environment, set name, etc.
       * The specific value corresponds to `TrpcMessageType`
       * </pre>
       *
       * <code>uint32 message_type = 8;</code>
       * @param value The messageType to set.
       * @return This builder for chaining.
       */
      public Builder setMessageType(int value) {
        
        messageType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The message type of the transparent transmission information
       * such as tracing, dyeing key, gray, authentication, multi-environment, set name, etc.
       * The specific value corresponds to `TrpcMessageType`
       * </pre>
       *
       * <code>uint32 message_type = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearMessageType() {
        
        messageType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, com.google.protobuf.ByteString> transInfo_;
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetTransInfo() {
        if (transInfo_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              TransInfoDefaultEntryHolder.defaultEntry);
        }
        return transInfo_;
      }
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetMutableTransInfo() {
        onChanged();;
        if (transInfo_ == null) {
          transInfo_ = com.google.protobuf.MapField.newMapField(
              TransInfoDefaultEntryHolder.defaultEntry);
        }
        if (!transInfo_.isMutable()) {
          transInfo_ = transInfo_.copy();
        }
        return transInfo_;
      }

      public int getTransInfoCount() {
        return internalGetTransInfo().getMap().size();
      }
      /**
       * <pre>
       * The information key-value pair transparently transmitted by the framework
       * Currently divided into two parts:
       * 1 part is the information to be transparently transmitted by the framework layer,
       * and the name of the key must be started with `trpc-``
       * 2 part is the information to be transparently transmitted by the business layer,
       * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
       * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; trans_info = 9;</code>
       */

      @java.lang.Override
      public boolean containsTransInfo(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetTransInfo().getMap().containsKey(key);
      }
      /**
       * Use {@link #getTransInfoMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getTransInfo() {
        return getTransInfoMap();
      }
      /**
       * <pre>
       * The information key-value pair transparently transmitted by the framework
       * Currently divided into two parts:
       * 1 part is the information to be transparently transmitted by the framework layer,
       * and the name of the key must be started with `trpc-``
       * 2 part is the information to be transparently transmitted by the business layer,
       * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
       * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; trans_info = 9;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getTransInfoMap() {
        return internalGetTransInfo().getMap();
      }
      /**
       * <pre>
       * The information key-value pair transparently transmitted by the framework
       * Currently divided into two parts:
       * 1 part is the information to be transparently transmitted by the framework layer,
       * and the name of the key must be started with `trpc-``
       * 2 part is the information to be transparently transmitted by the business layer,
       * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
       * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; trans_info = 9;</code>
       */
      @java.lang.Override

      public com.google.protobuf.ByteString getTransInfoOrDefault(
          java.lang.String key,
          com.google.protobuf.ByteString defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetTransInfo().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * The information key-value pair transparently transmitted by the framework
       * Currently divided into two parts:
       * 1 part is the information to be transparently transmitted by the framework layer,
       * and the name of the key must be started with `trpc-``
       * 2 part is the information to be transparently transmitted by the business layer,
       * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
       * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; trans_info = 9;</code>
       */
      @java.lang.Override

      public com.google.protobuf.ByteString getTransInfoOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetTransInfo().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearTransInfo() {
        internalGetMutableTransInfo().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * The information key-value pair transparently transmitted by the framework
       * Currently divided into two parts:
       * 1 part is the information to be transparently transmitted by the framework layer,
       * and the name of the key must be started with `trpc-``
       * 2 part is the information to be transparently transmitted by the business layer,
       * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
       * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; trans_info = 9;</code>
       */

      public Builder removeTransInfo(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableTransInfo().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString>
      getMutableTransInfo() {
        return internalGetMutableTransInfo().getMutableMap();
      }
      /**
       * <pre>
       * The information key-value pair transparently transmitted by the framework
       * Currently divided into two parts:
       * 1 part is the information to be transparently transmitted by the framework layer,
       * and the name of the key must be started with `trpc-``
       * 2 part is the information to be transparently transmitted by the business layer,
       * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
       * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; trans_info = 9;</code>
       */
      public Builder putTransInfo(
          java.lang.String key,
          com.google.protobuf.ByteString value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableTransInfo().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * The information key-value pair transparently transmitted by the framework
       * Currently divided into two parts:
       * 1 part is the information to be transparently transmitted by the framework layer,
       * and the name of the key must be started with `trpc-``
       * 2 part is the information to be transparently transmitted by the business layer,
       * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
       * Note: The key-value pair in trans_info will be transparently transmitted through the whole link, please use it carefully for business.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; trans_info = 9;</code>
       */

      public Builder putAllTransInfo(
          java.util.Map<java.lang.String, com.google.protobuf.ByteString> values) {
        internalGetMutableTransInfo().getMutableMap()
            .putAll(values);
        return this;
      }

      private int contentType_ ;
      /**
       * <pre>
       * The serialization type of the request data
       * eg: proto/json/.., default proto
       * The specific value corresponds to `TrpcContentEncodeType`
       * </pre>
       *
       * <code>uint32 content_type = 10;</code>
       * @return The contentType.
       */
      @java.lang.Override
      public int getContentType() {
        return contentType_;
      }
      /**
       * <pre>
       * The serialization type of the request data
       * eg: proto/json/.., default proto
       * The specific value corresponds to `TrpcContentEncodeType`
       * </pre>
       *
       * <code>uint32 content_type = 10;</code>
       * @param value The contentType to set.
       * @return This builder for chaining.
       */
      public Builder setContentType(int value) {
        
        contentType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The serialization type of the request data
       * eg: proto/json/.., default proto
       * The specific value corresponds to `TrpcContentEncodeType`
       * </pre>
       *
       * <code>uint32 content_type = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearContentType() {
        
        contentType_ = 0;
        onChanged();
        return this;
      }

      private int contentEncoding_ ;
      /**
       * <pre>
       * The compression type of the requested data
       * eg: gzip/snappy/..., not used by default
       * The specific value corresponds to `TrpcCompressType`
       * </pre>
       *
       * <code>uint32 content_encoding = 11;</code>
       * @return The contentEncoding.
       */
      @java.lang.Override
      public int getContentEncoding() {
        return contentEncoding_;
      }
      /**
       * <pre>
       * The compression type of the requested data
       * eg: gzip/snappy/..., not used by default
       * The specific value corresponds to `TrpcCompressType`
       * </pre>
       *
       * <code>uint32 content_encoding = 11;</code>
       * @param value The contentEncoding to set.
       * @return This builder for chaining.
       */
      public Builder setContentEncoding(int value) {
        
        contentEncoding_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The compression type of the requested data
       * eg: gzip/snappy/..., not used by default
       * The specific value corresponds to `TrpcCompressType`
       * </pre>
       *
       * <code>uint32 content_encoding = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearContentEncoding() {
        
        contentEncoding_ = 0;
        onChanged();
        return this;
      }

      private int attachmentSize_ ;
      /**
       * <pre>
       * The size of attachment data
       * </pre>
       *
       * <code>uint32 attachment_size = 12;</code>
       * @return The attachmentSize.
       */
      @java.lang.Override
      public int getAttachmentSize() {
        return attachmentSize_;
      }
      /**
       * <pre>
       * The size of attachment data
       * </pre>
       *
       * <code>uint32 attachment_size = 12;</code>
       * @param value The attachmentSize to set.
       * @return This builder for chaining.
       */
      public Builder setAttachmentSize(int value) {
        
        attachmentSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The size of attachment data
       * </pre>
       *
       * <code>uint32 attachment_size = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearAttachmentSize() {
        
        attachmentSize_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:trpc.RequestProtocol)
    }

    // @@protoc_insertion_point(class_scope:trpc.RequestProtocol)
    private static final com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol();
    }

    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestProtocol>
        PARSER = new com.google.protobuf.AbstractParser<RequestProtocol>() {
      @java.lang.Override
      public RequestProtocol parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RequestProtocol(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RequestProtocol> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestProtocol> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tencent.trpc.proto.standard.common.TRPCProtocol.RequestProtocol getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseProtocolOrBuilder extends
      // @@protoc_insertion_point(interface_extends:trpc.ResponseProtocol)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The version of protocol
     * The specific value corresponds to `TrpcProtoVersion`
     * </pre>
     *
     * <code>uint32 version = 1;</code>
     * @return The version.
     */
    int getVersion();

    /**
     * <pre>
     * Call type
     * eg: unary, one-way
     * The specific value corresponds to `TrpcCallType`
     * </pre>
     *
     * <code>uint32 call_type = 2;</code>
     * @return The callType.
     */
    int getCallType();

    /**
     * <pre>
     * The unique id of the request(on the conneciton)
     * </pre>
     *
     * <code>uint32 request_id = 3;</code>
     * @return The requestId.
     */
    int getRequestId();

    /**
     * <pre>
     * Error code
     * The specific value corresponds to `TrpcRetCode`
     * </pre>
     *
     * <code>int32 ret = 4;</code>
     * @return The ret.
     */
    int getRet();

    /**
     * <pre>
     * The error code of the interface
     * 0 means success, other means failure
     * </pre>
     *
     * <code>int32 func_ret = 5;</code>
     * @return The funcRet.
     */
    int getFuncRet();

    /**
     * <pre>
     * The result information when the call fails
     * </pre>
     *
     * <code>bytes error_msg = 6;</code>
     * @return The errorMsg.
     */
    com.google.protobuf.ByteString getErrorMsg();

    /**
     * <pre>
     * The message type of the transparent transmission information
     * such as tracing, dyeing key, gray, authentication, multi-environment, set name, etc.
     * The specific value corresponds to `TrpcMessageType`
     * </pre>
     *
     * <code>uint32 message_type = 7;</code>
     * @return The messageType.
     */
    int getMessageType();

    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 8;</code>
     */
    int getTransInfoCount();
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 8;</code>
     */
    boolean containsTransInfo(
        java.lang.String key);
    /**
     * Use {@link #getTransInfoMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getTransInfo();
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 8;</code>
     */
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getTransInfoMap();
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 8;</code>
     */

    com.google.protobuf.ByteString getTransInfoOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue);
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 8;</code>
     */

    com.google.protobuf.ByteString getTransInfoOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * The serialization type of the request data
     * eg: proto/json/.., default proto
     * The specific value corresponds to `TrpcContentEncodeType`
     * </pre>
     *
     * <code>uint32 content_type = 9;</code>
     * @return The contentType.
     */
    int getContentType();

    /**
     * <pre>
     * The compression type of the requested data
     * eg: gzip/snappy/..., not used by default
     * The specific value corresponds to `TrpcCompressType`
     * </pre>
     *
     * <code>uint32 content_encoding = 10;</code>
     * @return The contentEncoding.
     */
    int getContentEncoding();

    /**
     * <pre>
     * The size of attachment data
     * </pre>
     *
     * <code>uint32 attachment_size = 12;</code>
     * @return The attachmentSize.
     */
    int getAttachmentSize();
  }
  /**
   * <pre>
   * The response header for unary
   * </pre>
   *
   * Protobuf type {@code trpc.ResponseProtocol}
   */
  public static final class ResponseProtocol extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:trpc.ResponseProtocol)
      ResponseProtocolOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ResponseProtocol.newBuilder() to construct.
    private ResponseProtocol(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ResponseProtocol() {
      errorMsg_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ResponseProtocol();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ResponseProtocol(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              version_ = input.readUInt32();
              break;
            }
            case 16: {

              callType_ = input.readUInt32();
              break;
            }
            case 24: {

              requestId_ = input.readUInt32();
              break;
            }
            case 32: {

              ret_ = input.readInt32();
              break;
            }
            case 40: {

              funcRet_ = input.readInt32();
              break;
            }
            case 50: {

              errorMsg_ = input.readBytes();
              break;
            }
            case 56: {

              messageType_ = input.readUInt32();
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                transInfo_ = com.google.protobuf.MapField.newMapField(
                    TransInfoDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
              transInfo__ = input.readMessage(
                  TransInfoDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              transInfo_.getMutableMap().put(
                  transInfo__.getKey(), transInfo__.getValue());
              break;
            }
            case 72: {

              contentType_ = input.readUInt32();
              break;
            }
            case 80: {

              contentEncoding_ = input.readUInt32();
              break;
            }
            case 96: {

              attachmentSize_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_ResponseProtocol_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 8:
          return internalGetTransInfo();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_ResponseProtocol_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol.class, com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol.Builder.class);
    }

    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <pre>
     * The version of protocol
     * The specific value corresponds to `TrpcProtoVersion`
     * </pre>
     *
     * <code>uint32 version = 1;</code>
     * @return The version.
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }

    public static final int CALL_TYPE_FIELD_NUMBER = 2;
    private int callType_;
    /**
     * <pre>
     * Call type
     * eg: unary, one-way
     * The specific value corresponds to `TrpcCallType`
     * </pre>
     *
     * <code>uint32 call_type = 2;</code>
     * @return The callType.
     */
    @java.lang.Override
    public int getCallType() {
      return callType_;
    }

    public static final int REQUEST_ID_FIELD_NUMBER = 3;
    private int requestId_;
    /**
     * <pre>
     * The unique id of the request(on the conneciton)
     * </pre>
     *
     * <code>uint32 request_id = 3;</code>
     * @return The requestId.
     */
    @java.lang.Override
    public int getRequestId() {
      return requestId_;
    }

    public static final int RET_FIELD_NUMBER = 4;
    private int ret_;
    /**
     * <pre>
     * Error code
     * The specific value corresponds to `TrpcRetCode`
     * </pre>
     *
     * <code>int32 ret = 4;</code>
     * @return The ret.
     */
    @java.lang.Override
    public int getRet() {
      return ret_;
    }

    public static final int FUNC_RET_FIELD_NUMBER = 5;
    private int funcRet_;
    /**
     * <pre>
     * The error code of the interface
     * 0 means success, other means failure
     * </pre>
     *
     * <code>int32 func_ret = 5;</code>
     * @return The funcRet.
     */
    @java.lang.Override
    public int getFuncRet() {
      return funcRet_;
    }

    public static final int ERROR_MSG_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString errorMsg_;
    /**
     * <pre>
     * The result information when the call fails
     * </pre>
     *
     * <code>bytes error_msg = 6;</code>
     * @return The errorMsg.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getErrorMsg() {
      return errorMsg_;
    }

    public static final int MESSAGE_TYPE_FIELD_NUMBER = 7;
    private int messageType_;
    /**
     * <pre>
     * The message type of the transparent transmission information
     * such as tracing, dyeing key, gray, authentication, multi-environment, set name, etc.
     * The specific value corresponds to `TrpcMessageType`
     * </pre>
     *
     * <code>uint32 message_type = 7;</code>
     * @return The messageType.
     */
    @java.lang.Override
    public int getMessageType() {
      return messageType_;
    }

    public static final int TRANS_INFO_FIELD_NUMBER = 8;
    private static final class TransInfoDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, com.google.protobuf.ByteString>newDefaultInstance(
                  com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_ResponseProtocol_TransInfoEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    private com.google.protobuf.MapField<
        java.lang.String, com.google.protobuf.ByteString> transInfo_;
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
    internalGetTransInfo() {
      if (transInfo_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TransInfoDefaultEntryHolder.defaultEntry);
      }
      return transInfo_;
    }

    public int getTransInfoCount() {
      return internalGetTransInfo().getMap().size();
    }
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 8;</code>
     */

    @java.lang.Override
    public boolean containsTransInfo(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetTransInfo().getMap().containsKey(key);
    }
    /**
     * Use {@link #getTransInfoMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getTransInfo() {
      return getTransInfoMap();
    }
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 8;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getTransInfoMap() {
      return internalGetTransInfo().getMap();
    }
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 8;</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getTransInfoOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetTransInfo().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * The information key-value pair transparently transmitted by the framework
     * Currently divided into two parts:
     * 1 part is the information to be transparently transmitted by the framework layer,
     * and the name of the key must be started with `trpc-``
     * 2 part is the information to be transparently transmitted by the business layer,
     * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; trans_info = 8;</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getTransInfoOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetTransInfo().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int CONTENT_TYPE_FIELD_NUMBER = 9;
    private int contentType_;
    /**
     * <pre>
     * The serialization type of the request data
     * eg: proto/json/.., default proto
     * The specific value corresponds to `TrpcContentEncodeType`
     * </pre>
     *
     * <code>uint32 content_type = 9;</code>
     * @return The contentType.
     */
    @java.lang.Override
    public int getContentType() {
      return contentType_;
    }

    public static final int CONTENT_ENCODING_FIELD_NUMBER = 10;
    private int contentEncoding_;
    /**
     * <pre>
     * The compression type of the requested data
     * eg: gzip/snappy/..., not used by default
     * The specific value corresponds to `TrpcCompressType`
     * </pre>
     *
     * <code>uint32 content_encoding = 10;</code>
     * @return The contentEncoding.
     */
    @java.lang.Override
    public int getContentEncoding() {
      return contentEncoding_;
    }

    public static final int ATTACHMENT_SIZE_FIELD_NUMBER = 12;
    private int attachmentSize_;
    /**
     * <pre>
     * The size of attachment data
     * </pre>
     *
     * <code>uint32 attachment_size = 12;</code>
     * @return The attachmentSize.
     */
    @java.lang.Override
    public int getAttachmentSize() {
      return attachmentSize_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (version_ != 0) {
        output.writeUInt32(1, version_);
      }
      if (callType_ != 0) {
        output.writeUInt32(2, callType_);
      }
      if (requestId_ != 0) {
        output.writeUInt32(3, requestId_);
      }
      if (ret_ != 0) {
        output.writeInt32(4, ret_);
      }
      if (funcRet_ != 0) {
        output.writeInt32(5, funcRet_);
      }
      if (!errorMsg_.isEmpty()) {
        output.writeBytes(6, errorMsg_);
      }
      if (messageType_ != 0) {
        output.writeUInt32(7, messageType_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetTransInfo(),
          TransInfoDefaultEntryHolder.defaultEntry,
          8);
      if (contentType_ != 0) {
        output.writeUInt32(9, contentType_);
      }
      if (contentEncoding_ != 0) {
        output.writeUInt32(10, contentEncoding_);
      }
      if (attachmentSize_ != 0) {
        output.writeUInt32(12, attachmentSize_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (version_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, version_);
      }
      if (callType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, callType_);
      }
      if (requestId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, requestId_);
      }
      if (ret_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, ret_);
      }
      if (funcRet_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, funcRet_);
      }
      if (!errorMsg_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, errorMsg_);
      }
      if (messageType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, messageType_);
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ByteString> entry
           : internalGetTransInfo().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
        transInfo__ = TransInfoDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, transInfo__);
      }
      if (contentType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, contentType_);
      }
      if (contentEncoding_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, contentEncoding_);
      }
      if (attachmentSize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, attachmentSize_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol)) {
        return super.equals(obj);
      }
      com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol other = (com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol) obj;

      if (getVersion()
          != other.getVersion()) return false;
      if (getCallType()
          != other.getCallType()) return false;
      if (getRequestId()
          != other.getRequestId()) return false;
      if (getRet()
          != other.getRet()) return false;
      if (getFuncRet()
          != other.getFuncRet()) return false;
      if (!getErrorMsg()
          .equals(other.getErrorMsg())) return false;
      if (getMessageType()
          != other.getMessageType()) return false;
      if (!internalGetTransInfo().equals(
          other.internalGetTransInfo())) return false;
      if (getContentType()
          != other.getContentType()) return false;
      if (getContentEncoding()
          != other.getContentEncoding()) return false;
      if (getAttachmentSize()
          != other.getAttachmentSize()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion();
      hash = (37 * hash) + CALL_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getCallType();
      hash = (37 * hash) + REQUEST_ID_FIELD_NUMBER;
      hash = (53 * hash) + getRequestId();
      hash = (37 * hash) + RET_FIELD_NUMBER;
      hash = (53 * hash) + getRet();
      hash = (37 * hash) + FUNC_RET_FIELD_NUMBER;
      hash = (53 * hash) + getFuncRet();
      hash = (37 * hash) + ERROR_MSG_FIELD_NUMBER;
      hash = (53 * hash) + getErrorMsg().hashCode();
      hash = (37 * hash) + MESSAGE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getMessageType();
      if (!internalGetTransInfo().getMap().isEmpty()) {
        hash = (37 * hash) + TRANS_INFO_FIELD_NUMBER;
        hash = (53 * hash) + internalGetTransInfo().hashCode();
      }
      hash = (37 * hash) + CONTENT_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getContentType();
      hash = (37 * hash) + CONTENT_ENCODING_FIELD_NUMBER;
      hash = (53 * hash) + getContentEncoding();
      hash = (37 * hash) + ATTACHMENT_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + getAttachmentSize();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The response header for unary
     * </pre>
     *
     * Protobuf type {@code trpc.ResponseProtocol}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:trpc.ResponseProtocol)
        com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocolOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_ResponseProtocol_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 8:
            return internalGetTransInfo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 8:
            return internalGetMutableTransInfo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_ResponseProtocol_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol.class, com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol.Builder.class);
      }

      // Construct using com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        version_ = 0;

        callType_ = 0;

        requestId_ = 0;

        ret_ = 0;

        funcRet_ = 0;

        errorMsg_ = com.google.protobuf.ByteString.EMPTY;

        messageType_ = 0;

        internalGetMutableTransInfo().clear();
        contentType_ = 0;

        contentEncoding_ = 0;

        attachmentSize_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tencent.trpc.proto.standard.common.TRPCProtocol.internal_static_trpc_ResponseProtocol_descriptor;
      }

      @java.lang.Override
      public com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol getDefaultInstanceForType() {
        return com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol.getDefaultInstance();
      }

      @java.lang.Override
      public com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol build() {
        com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol buildPartial() {
        com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol result = new com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol(this);
        int from_bitField0_ = bitField0_;
        result.version_ = version_;
        result.callType_ = callType_;
        result.requestId_ = requestId_;
        result.ret_ = ret_;
        result.funcRet_ = funcRet_;
        result.errorMsg_ = errorMsg_;
        result.messageType_ = messageType_;
        result.transInfo_ = internalGetTransInfo();
        result.transInfo_.makeImmutable();
        result.contentType_ = contentType_;
        result.contentEncoding_ = contentEncoding_;
        result.attachmentSize_ = attachmentSize_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol) {
          return mergeFrom((com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol other) {
        if (other == com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol.getDefaultInstance()) return this;
        if (other.getVersion() != 0) {
          setVersion(other.getVersion());
        }
        if (other.getCallType() != 0) {
          setCallType(other.getCallType());
        }
        if (other.getRequestId() != 0) {
          setRequestId(other.getRequestId());
        }
        if (other.getRet() != 0) {
          setRet(other.getRet());
        }
        if (other.getFuncRet() != 0) {
          setFuncRet(other.getFuncRet());
        }
        if (other.getErrorMsg() != com.google.protobuf.ByteString.EMPTY) {
          setErrorMsg(other.getErrorMsg());
        }
        if (other.getMessageType() != 0) {
          setMessageType(other.getMessageType());
        }
        internalGetMutableTransInfo().mergeFrom(
            other.internalGetTransInfo());
        if (other.getContentType() != 0) {
          setContentType(other.getContentType());
        }
        if (other.getContentEncoding() != 0) {
          setContentEncoding(other.getContentEncoding());
        }
        if (other.getAttachmentSize() != 0) {
          setAttachmentSize(other.getAttachmentSize());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int version_ ;
      /**
       * <pre>
       * The version of protocol
       * The specific value corresponds to `TrpcProtoVersion`
       * </pre>
       *
       * <code>uint32 version = 1;</code>
       * @return The version.
       */
      @java.lang.Override
      public int getVersion() {
        return version_;
      }
      /**
       * <pre>
       * The version of protocol
       * The specific value corresponds to `TrpcProtoVersion`
       * </pre>
       *
       * <code>uint32 version = 1;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(int value) {
        
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The version of protocol
       * The specific value corresponds to `TrpcProtoVersion`
       * </pre>
       *
       * <code>uint32 version = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = 0;
        onChanged();
        return this;
      }

      private int callType_ ;
      /**
       * <pre>
       * Call type
       * eg: unary, one-way
       * The specific value corresponds to `TrpcCallType`
       * </pre>
       *
       * <code>uint32 call_type = 2;</code>
       * @return The callType.
       */
      @java.lang.Override
      public int getCallType() {
        return callType_;
      }
      /**
       * <pre>
       * Call type
       * eg: unary, one-way
       * The specific value corresponds to `TrpcCallType`
       * </pre>
       *
       * <code>uint32 call_type = 2;</code>
       * @param value The callType to set.
       * @return This builder for chaining.
       */
      public Builder setCallType(int value) {
        
        callType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Call type
       * eg: unary, one-way
       * The specific value corresponds to `TrpcCallType`
       * </pre>
       *
       * <code>uint32 call_type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCallType() {
        
        callType_ = 0;
        onChanged();
        return this;
      }

      private int requestId_ ;
      /**
       * <pre>
       * The unique id of the request(on the conneciton)
       * </pre>
       *
       * <code>uint32 request_id = 3;</code>
       * @return The requestId.
       */
      @java.lang.Override
      public int getRequestId() {
        return requestId_;
      }
      /**
       * <pre>
       * The unique id of the request(on the conneciton)
       * </pre>
       *
       * <code>uint32 request_id = 3;</code>
       * @param value The requestId to set.
       * @return This builder for chaining.
       */
      public Builder setRequestId(int value) {
        
        requestId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The unique id of the request(on the conneciton)
       * </pre>
       *
       * <code>uint32 request_id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRequestId() {
        
        requestId_ = 0;
        onChanged();
        return this;
      }

      private int ret_ ;
      /**
       * <pre>
       * Error code
       * The specific value corresponds to `TrpcRetCode`
       * </pre>
       *
       * <code>int32 ret = 4;</code>
       * @return The ret.
       */
      @java.lang.Override
      public int getRet() {
        return ret_;
      }
      /**
       * <pre>
       * Error code
       * The specific value corresponds to `TrpcRetCode`
       * </pre>
       *
       * <code>int32 ret = 4;</code>
       * @param value The ret to set.
       * @return This builder for chaining.
       */
      public Builder setRet(int value) {
        
        ret_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Error code
       * The specific value corresponds to `TrpcRetCode`
       * </pre>
       *
       * <code>int32 ret = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRet() {
        
        ret_ = 0;
        onChanged();
        return this;
      }

      private int funcRet_ ;
      /**
       * <pre>
       * The error code of the interface
       * 0 means success, other means failure
       * </pre>
       *
       * <code>int32 func_ret = 5;</code>
       * @return The funcRet.
       */
      @java.lang.Override
      public int getFuncRet() {
        return funcRet_;
      }
      /**
       * <pre>
       * The error code of the interface
       * 0 means success, other means failure
       * </pre>
       *
       * <code>int32 func_ret = 5;</code>
       * @param value The funcRet to set.
       * @return This builder for chaining.
       */
      public Builder setFuncRet(int value) {
        
        funcRet_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The error code of the interface
       * 0 means success, other means failure
       * </pre>
       *
       * <code>int32 func_ret = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearFuncRet() {
        
        funcRet_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString errorMsg_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The result information when the call fails
       * </pre>
       *
       * <code>bytes error_msg = 6;</code>
       * @return The errorMsg.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getErrorMsg() {
        return errorMsg_;
      }
      /**
       * <pre>
       * The result information when the call fails
       * </pre>
       *
       * <code>bytes error_msg = 6;</code>
       * @param value The errorMsg to set.
       * @return This builder for chaining.
       */
      public Builder setErrorMsg(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        errorMsg_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The result information when the call fails
       * </pre>
       *
       * <code>bytes error_msg = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearErrorMsg() {
        
        errorMsg_ = getDefaultInstance().getErrorMsg();
        onChanged();
        return this;
      }

      private int messageType_ ;
      /**
       * <pre>
       * The message type of the transparent transmission information
       * such as tracing, dyeing key, gray, authentication, multi-environment, set name, etc.
       * The specific value corresponds to `TrpcMessageType`
       * </pre>
       *
       * <code>uint32 message_type = 7;</code>
       * @return The messageType.
       */
      @java.lang.Override
      public int getMessageType() {
        return messageType_;
      }
      /**
       * <pre>
       * The message type of the transparent transmission information
       * such as tracing, dyeing key, gray, authentication, multi-environment, set name, etc.
       * The specific value corresponds to `TrpcMessageType`
       * </pre>
       *
       * <code>uint32 message_type = 7;</code>
       * @param value The messageType to set.
       * @return This builder for chaining.
       */
      public Builder setMessageType(int value) {
        
        messageType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The message type of the transparent transmission information
       * such as tracing, dyeing key, gray, authentication, multi-environment, set name, etc.
       * The specific value corresponds to `TrpcMessageType`
       * </pre>
       *
       * <code>uint32 message_type = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearMessageType() {
        
        messageType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, com.google.protobuf.ByteString> transInfo_;
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetTransInfo() {
        if (transInfo_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              TransInfoDefaultEntryHolder.defaultEntry);
        }
        return transInfo_;
      }
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetMutableTransInfo() {
        onChanged();;
        if (transInfo_ == null) {
          transInfo_ = com.google.protobuf.MapField.newMapField(
              TransInfoDefaultEntryHolder.defaultEntry);
        }
        if (!transInfo_.isMutable()) {
          transInfo_ = transInfo_.copy();
        }
        return transInfo_;
      }

      public int getTransInfoCount() {
        return internalGetTransInfo().getMap().size();
      }
      /**
       * <pre>
       * The information key-value pair transparently transmitted by the framework
       * Currently divided into two parts:
       * 1 part is the information to be transparently transmitted by the framework layer,
       * and the name of the key must be started with `trpc-``
       * 2 part is the information to be transparently transmitted by the business layer,
       * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; trans_info = 8;</code>
       */

      @java.lang.Override
      public boolean containsTransInfo(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetTransInfo().getMap().containsKey(key);
      }
      /**
       * Use {@link #getTransInfoMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getTransInfo() {
        return getTransInfoMap();
      }
      /**
       * <pre>
       * The information key-value pair transparently transmitted by the framework
       * Currently divided into two parts:
       * 1 part is the information to be transparently transmitted by the framework layer,
       * and the name of the key must be started with `trpc-``
       * 2 part is the information to be transparently transmitted by the business layer,
       * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; trans_info = 8;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getTransInfoMap() {
        return internalGetTransInfo().getMap();
      }
      /**
       * <pre>
       * The information key-value pair transparently transmitted by the framework
       * Currently divided into two parts:
       * 1 part is the information to be transparently transmitted by the framework layer,
       * and the name of the key must be started with `trpc-``
       * 2 part is the information to be transparently transmitted by the business layer,
       * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; trans_info = 8;</code>
       */
      @java.lang.Override

      public com.google.protobuf.ByteString getTransInfoOrDefault(
          java.lang.String key,
          com.google.protobuf.ByteString defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetTransInfo().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * The information key-value pair transparently transmitted by the framework
       * Currently divided into two parts:
       * 1 part is the information to be transparently transmitted by the framework layer,
       * and the name of the key must be started with `trpc-``
       * 2 part is the information to be transparently transmitted by the business layer,
       * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; trans_info = 8;</code>
       */
      @java.lang.Override

      public com.google.protobuf.ByteString getTransInfoOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetTransInfo().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearTransInfo() {
        internalGetMutableTransInfo().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * The information key-value pair transparently transmitted by the framework
       * Currently divided into two parts:
       * 1 part is the information to be transparently transmitted by the framework layer,
       * and the name of the key must be started with `trpc-``
       * 2 part is the information to be transparently transmitted by the business layer,
       * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; trans_info = 8;</code>
       */

      public Builder removeTransInfo(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableTransInfo().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString>
      getMutableTransInfo() {
        return internalGetMutableTransInfo().getMutableMap();
      }
      /**
       * <pre>
       * The information key-value pair transparently transmitted by the framework
       * Currently divided into two parts:
       * 1 part is the information to be transparently transmitted by the framework layer,
       * and the name of the key must be started with `trpc-``
       * 2 part is the information to be transparently transmitted by the business layer,
       * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; trans_info = 8;</code>
       */
      public Builder putTransInfo(
          java.lang.String key,
          com.google.protobuf.ByteString value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableTransInfo().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * The information key-value pair transparently transmitted by the framework
       * Currently divided into two parts:
       * 1 part is the information to be transparently transmitted by the framework layer,
       * and the name of the key must be started with `trpc-``
       * 2 part is the information to be transparently transmitted by the business layer,
       * and the business can set it by itself, it is recommended to start with `app-``, not `trpc-`
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; trans_info = 8;</code>
       */

      public Builder putAllTransInfo(
          java.util.Map<java.lang.String, com.google.protobuf.ByteString> values) {
        internalGetMutableTransInfo().getMutableMap()
            .putAll(values);
        return this;
      }

      private int contentType_ ;
      /**
       * <pre>
       * The serialization type of the request data
       * eg: proto/json/.., default proto
       * The specific value corresponds to `TrpcContentEncodeType`
       * </pre>
       *
       * <code>uint32 content_type = 9;</code>
       * @return The contentType.
       */
      @java.lang.Override
      public int getContentType() {
        return contentType_;
      }
      /**
       * <pre>
       * The serialization type of the request data
       * eg: proto/json/.., default proto
       * The specific value corresponds to `TrpcContentEncodeType`
       * </pre>
       *
       * <code>uint32 content_type = 9;</code>
       * @param value The contentType to set.
       * @return This builder for chaining.
       */
      public Builder setContentType(int value) {
        
        contentType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The serialization type of the request data
       * eg: proto/json/.., default proto
       * The specific value corresponds to `TrpcContentEncodeType`
       * </pre>
       *
       * <code>uint32 content_type = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearContentType() {
        
        contentType_ = 0;
        onChanged();
        return this;
      }

      private int contentEncoding_ ;
      /**
       * <pre>
       * The compression type of the requested data
       * eg: gzip/snappy/..., not used by default
       * The specific value corresponds to `TrpcCompressType`
       * </pre>
       *
       * <code>uint32 content_encoding = 10;</code>
       * @return The contentEncoding.
       */
      @java.lang.Override
      public int getContentEncoding() {
        return contentEncoding_;
      }
      /**
       * <pre>
       * The compression type of the requested data
       * eg: gzip/snappy/..., not used by default
       * The specific value corresponds to `TrpcCompressType`
       * </pre>
       *
       * <code>uint32 content_encoding = 10;</code>
       * @param value The contentEncoding to set.
       * @return This builder for chaining.
       */
      public Builder setContentEncoding(int value) {
        
        contentEncoding_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The compression type of the requested data
       * eg: gzip/snappy/..., not used by default
       * The specific value corresponds to `TrpcCompressType`
       * </pre>
       *
       * <code>uint32 content_encoding = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearContentEncoding() {
        
        contentEncoding_ = 0;
        onChanged();
        return this;
      }

      private int attachmentSize_ ;
      /**
       * <pre>
       * The size of attachment data
       * </pre>
       *
       * <code>uint32 attachment_size = 12;</code>
       * @return The attachmentSize.
       */
      @java.lang.Override
      public int getAttachmentSize() {
        return attachmentSize_;
      }
      /**
       * <pre>
       * The size of attachment data
       * </pre>
       *
       * <code>uint32 attachment_size = 12;</code>
       * @param value The attachmentSize to set.
       * @return This builder for chaining.
       */
      public Builder setAttachmentSize(int value) {
        
        attachmentSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The size of attachment data
       * </pre>
       *
       * <code>uint32 attachment_size = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearAttachmentSize() {
        
        attachmentSize_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:trpc.ResponseProtocol)
    }

    // @@protoc_insertion_point(class_scope:trpc.ResponseProtocol)
    private static final com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol();
    }

    public static com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResponseProtocol>
        PARSER = new com.google.protobuf.AbstractParser<ResponseProtocol>() {
      @java.lang.Override
      public ResponseProtocol parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ResponseProtocol(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResponseProtocol> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResponseProtocol> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tencent.trpc.proto.standard.common.TRPCProtocol.ResponseProtocol getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_trpc_TrpcStreamInitMeta_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_trpc_TrpcStreamInitMeta_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_trpc_TrpcStreamInitRequestMeta_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_trpc_TrpcStreamInitRequestMeta_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_trpc_TrpcStreamInitRequestMeta_TransInfoEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_trpc_TrpcStreamInitRequestMeta_TransInfoEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_trpc_TrpcStreamInitResponseMeta_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_trpc_TrpcStreamInitResponseMeta_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_trpc_TrpcStreamFeedBackMeta_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_trpc_TrpcStreamFeedBackMeta_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_trpc_TrpcStreamCloseMeta_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_trpc_TrpcStreamCloseMeta_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_trpc_TrpcStreamCloseMeta_TransInfoEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_trpc_TrpcStreamCloseMeta_TransInfoEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_trpc_RequestProtocol_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_trpc_RequestProtocol_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_trpc_RequestProtocol_TransInfoEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_trpc_RequestProtocol_TransInfoEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_trpc_ResponseProtocol_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_trpc_ResponseProtocol_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_trpc_ResponseProtocol_TransInfoEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_trpc_ResponseProtocol_TransInfoEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\ntrpc.proto\022\004trpc\"\316\001\n\022TrpcStreamInitMet" +
      "a\0225\n\014request_meta\030\001 \001(\0132\037.trpc.TrpcStrea" +
      "mInitRequestMeta\0227\n\rresponse_meta\030\002 \001(\0132" +
      " .trpc.TrpcStreamInitResponseMeta\022\030\n\020ini" +
      "t_window_size\030\003 \001(\r\022\024\n\014content_type\030\004 \001(" +
      "\r\022\030\n\020content_encoding\030\005 \001(\r\"\325\001\n\031TrpcStre" +
      "amInitRequestMeta\022\016\n\006caller\030\001 \001(\014\022\016\n\006cal" +
      "lee\030\002 \001(\014\022\014\n\004func\030\003 \001(\014\022\024\n\014message_type\030" +
      "\004 \001(\r\022B\n\ntrans_info\030\005 \003(\0132..trpc.TrpcStr" +
      "eamInitRequestMeta.TransInfoEntry\0320\n\016Tra" +
      "nsInfoEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\014:" +
      "\0028\001\"<\n\032TrpcStreamInitResponseMeta\022\013\n\003ret" +
      "\030\001 \001(\005\022\021\n\terror_msg\030\002 \001(\014\"7\n\026TrpcStreamF" +
      "eedBackMeta\022\035\n\025window_size_increment\030\001 \001" +
      "(\r\"\333\001\n\023TrpcStreamCloseMeta\022\022\n\nclose_type" +
      "\030\001 \001(\005\022\013\n\003ret\030\002 \001(\005\022\013\n\003msg\030\003 \001(\014\022\024\n\014mess" +
      "age_type\030\004 \001(\r\022<\n\ntrans_info\030\005 \003(\0132(.trp" +
      "c.TrpcStreamCloseMeta.TransInfoEntry\022\020\n\010" +
      "func_ret\030\006 \001(\005\0320\n\016TransInfoEntry\022\013\n\003key\030" +
      "\001 \001(\t\022\r\n\005value\030\002 \001(\014:\0028\001\"\323\002\n\017RequestProt" +
      "ocol\022\017\n\007version\030\001 \001(\r\022\021\n\tcall_type\030\002 \001(\r" +
      "\022\022\n\nrequest_id\030\003 \001(\r\022\017\n\007timeout\030\004 \001(\r\022\016\n" +
      "\006caller\030\005 \001(\014\022\016\n\006callee\030\006 \001(\014\022\014\n\004func\030\007 " +
      "\001(\014\022\024\n\014message_type\030\010 \001(\r\0228\n\ntrans_info\030" +
      "\t \003(\0132$.trpc.RequestProtocol.TransInfoEn" +
      "try\022\024\n\014content_type\030\n \001(\r\022\030\n\020content_enc" +
      "oding\030\013 \001(\r\022\027\n\017attachment_size\030\014 \001(\r\0320\n\016" +
      "TransInfoEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001" +
      "(\014:\0028\001\"\310\002\n\020ResponseProtocol\022\017\n\007version\030\001" +
      " \001(\r\022\021\n\tcall_type\030\002 \001(\r\022\022\n\nrequest_id\030\003 " +
      "\001(\r\022\013\n\003ret\030\004 \001(\005\022\020\n\010func_ret\030\005 \001(\005\022\021\n\ter" +
      "ror_msg\030\006 \001(\014\022\024\n\014message_type\030\007 \001(\r\0229\n\nt" +
      "rans_info\030\010 \003(\0132%.trpc.ResponseProtocol." +
      "TransInfoEntry\022\024\n\014content_type\030\t \001(\r\022\030\n\020" +
      "content_encoding\030\n \001(\r\022\027\n\017attachment_siz" +
      "e\030\014 \001(\r\0320\n\016TransInfoEntry\022\013\n\003key\030\001 \001(\t\022\r" +
      "\n\005value\030\002 \001(\014:\0028\001*9\n\tTrpcMagic\022\025\n\021TRPC_D" +
      "EFAULT_NONE\020\000\022\025\n\020TRPC_MAGIC_VALUE\020\260\022*@\n\021" +
      "TrpcDataFrameType\022\024\n\020TRPC_UNARY_FRAME\020\000\022" +
      "\025\n\021TRPC_STREAM_FRAME\020\001*\232\001\n\023TrpcStreamFra" +
      "meType\022\016\n\nTRPC_UNARY\020\000\022\032\n\026TRPC_STREAM_FR" +
      "AME_INIT\020\001\022\032\n\026TRPC_STREAM_FRAME_DATA\020\002\022\036" +
      "\n\032TRPC_STREAM_FRAME_FEEDBACK\020\003\022\033\n\027TRPC_S" +
      "TREAM_FRAME_CLOSE\020\004*C\n\023TrpcStreamCloseTy" +
      "pe\022\025\n\021TRPC_STREAM_CLOSE\020\000\022\025\n\021TRPC_STREAM" +
      "_RESET\020\001*%\n\020TrpcProtoVersion\022\021\n\rTRPC_PRO" +
      "TO_V1\020\000*9\n\014TrpcCallType\022\023\n\017TRPC_UNARY_CA" +
      "LL\020\000\022\024\n\020TRPC_ONEWAY_CALL\020\001*\241\001\n\017TrpcMessa" +
      "geType\022\020\n\014TRPC_DEFAULT\020\000\022\027\n\023TRPC_DYEING_" +
      "MESSAGE\020\001\022\026\n\022TRPC_TRACE_MESSAGE\020\002\022\032\n\026TRP" +
      "C_MULTI_ENV_MESSAGE\020\004\022\025\n\021TRPC_GRID_MESSA" +
      "GE\020\010\022\030\n\024TRPC_SETNAME_MESSAGE\020\020*\270\001\n\025TrpcC" +
      "ontentEncodeType\022\025\n\021TRPC_PROTO_ENCODE\020\000\022" +
      "\023\n\017TRPC_JCE_ENCODE\020\001\022\024\n\020TRPC_JSON_ENCODE" +
      "\020\002\022\032\n\026TRPC_FLATBUFFER_ENCODE\020\003\022\024\n\020TRPC_N" +
      "OOP_ENCODE\020\004\022\023\n\017TRPC_XML_ENCODE\020\005\022\026\n\022TRP" +
      "C_THRIFT_ENCODE\020\006*\362\001\n\020TrpcCompressType\022\031" +
      "\n\025TRPC_DEFAULT_COMPRESS\020\000\022\026\n\022TRPC_GZIP_C" +
      "OMPRESS\020\001\022\030\n\024TRPC_SNAPPY_COMPRESS\020\002\022\026\n\022T" +
      "RPC_ZLIB_COMPRESS\020\003\022\037\n\033TRPC_SNAPPY_STREA" +
      "M_COMPRESS\020\004\022\036\n\032TRPC_SNAPPY_BLOCK_COMPRE" +
      "SS\020\005\022\033\n\027TRPC_LZ4_FRAME_COMPRESS\020\006\022\033\n\027TRP" +
      "C_LZ4_BLOCK_COMPRESS\020\007*\321\r\n\013TrpcRetCode\022\027" +
      "\n\023TRPC_INVOKE_SUCCESS\020\000\022\032\n\026TRPC_SERVER_D" +
      "ECODE_ERR\020\001\022\032\n\026TRPC_SERVER_ENCODE_ERR\020\002\022" +
      "\035\n\031TRPC_SERVER_NOSERVICE_ERR\020\013\022\032\n\026TRPC_S" +
      "ERVER_NOFUNC_ERR\020\014\022\033\n\027TRPC_SERVER_TIMEOU" +
      "T_ERR\020\025\022\034\n\030TRPC_SERVER_OVERLOAD_ERR\020\026\022\033\n" +
      "\027TRPC_SERVER_LIMITED_ERR\020\027\022%\n!TRPC_SERVE" +
      "R_FULL_LINK_TIMEOUT_ERR\020\030\022\032\n\026TRPC_SERVER" +
      "_SYSTEM_ERR\020\037\022\030\n\024TRPC_SERVER_AUTH_ERR\020)\022" +
      "\034\n\030TRPC_SERVER_VALIDATE_ERR\0203\022\"\n\036TRPC_CL" +
      "IENT_INVOKE_TIMEOUT_ERR\020e\022%\n!TRPC_CLIENT" +
      "_FULL_LINK_TIMEOUT_ERR\020f\022\033\n\027TRPC_CLIENT_" +
      "CONNECT_ERR\020o\022\032\n\026TRPC_CLIENT_ENCODE_ERR\020" +
      "y\022\032\n\026TRPC_CLIENT_DECODE_ERR\020z\022\033\n\027TRPC_CL" +
      "IENT_LIMITED_ERR\020{\022\034\n\030TRPC_CLIENT_OVERLO" +
      "AD_ERR\020|\022\033\n\026TRPC_CLIENT_ROUTER_ERR\020\203\001\022\034\n" +
      "\027TRPC_CLIENT_NETWORK_ERR\020\215\001\022\035\n\030TRPC_CLIE" +
      "NT_VALIDATE_ERR\020\227\001\022\035\n\030TRPC_CLIENT_CANCEL" +
      "ED_ERR\020\241\001\022\037\n\032TRPC_CLIENT_READ_FRAME_ERR\020" +
      "\253\001\022#\n\036TRPC_STREAM_SERVER_NETWORK_ERR\020\311\001\022" +
      ",\n\'TRPC_STREAM_SERVER_MSG_EXCEED_LIMIT_E" +
      "RR\020\323\001\022\"\n\035TRPC_STREAM_SERVER_ENCODE_ERR\020\335" +
      "\001\022\"\n\035TRPC_STREAM_SERVER_DECODE_ERR\020\336\001\022!\n" +
      "\034TRPC_STREAM_SERVER_WRITE_END\020\347\001\022*\n%TRPC" +
      "_STREAM_SERVER_WRITE_OVERFLOW_ERR\020\350\001\022\'\n\"" +
      "TRPC_STREAM_SERVER_WRITE_CLOSE_ERR\020\351\001\022)\n" +
      "$TRPC_STREAM_SERVER_WRITE_TIMEOUT_ERR\020\352\001" +
      "\022 \n\033TRPC_STREAM_SERVER_READ_END\020\373\001\022&\n!TR" +
      "PC_STREAM_SERVER_READ_CLOSE_ERR\020\374\001\022&\n!TR" +
      "PC_STREAM_SERVER_READ_EMPTY_ERR\020\375\001\022(\n#TR" +
      "PC_STREAM_SERVER_READ_TIMEOUT_ERR\020\376\001\022#\n\036" +
      "TRPC_STREAM_CLIENT_NETWORK_ERR\020\255\002\022,\n\'TRP" +
      "C_STREAM_CLIENT_MSG_EXCEED_LIMIT_ERR\020\267\002\022" +
      "\"\n\035TRPC_STREAM_CLIENT_ENCODE_ERR\020\301\002\022\"\n\035T" +
      "RPC_STREAM_CLIENT_DECODE_ERR\020\302\002\022!\n\034TRPC_" +
      "STREAM_CLIENT_WRITE_END\020\313\002\022*\n%TRPC_STREA" +
      "M_CLIENT_WRITE_OVERFLOW_ERR\020\314\002\022\'\n\"TRPC_S" +
      "TREAM_CLIENT_WRITE_CLOSE_ERR\020\315\002\022)\n$TRPC_" +
      "STREAM_CLIENT_WRITE_TIMEOUT_ERR\020\316\002\022 \n\033TR" +
      "PC_STREAM_CLIENT_READ_END\020\337\002\022&\n!TRPC_STR" +
      "EAM_CLIENT_READ_CLOSE_ERR\020\340\002\022&\n!TRPC_STR" +
      "EAM_CLIENT_READ_EMPTY_ERR\020\341\002\022(\n#TRPC_STR" +
      "EAM_CLIENT_READ_TIMEOUT_ERR\020\342\002\022\034\n\027TRPC_I" +
      "NVOKE_UNKNOWN_ERR\020\347\007\022\034\n\027TRPC_STREAM_UNKN" +
      "OWN_ERR\020\350\007B`\n&com.tencent.trpc.proto.sta" +
      "ndard.commonB\014TRPCProtocolZ(trpc.group/t" +
      "rpc/trpc-protocol/pb/go/trpcb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_trpc_TrpcStreamInitMeta_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_trpc_TrpcStreamInitMeta_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_trpc_TrpcStreamInitMeta_descriptor,
        new java.lang.String[] { "RequestMeta", "ResponseMeta", "InitWindowSize", "ContentType", "ContentEncoding", });
    internal_static_trpc_TrpcStreamInitRequestMeta_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_trpc_TrpcStreamInitRequestMeta_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_trpc_TrpcStreamInitRequestMeta_descriptor,
        new java.lang.String[] { "Caller", "Callee", "Func", "MessageType", "TransInfo", });
    internal_static_trpc_TrpcStreamInitRequestMeta_TransInfoEntry_descriptor =
      internal_static_trpc_TrpcStreamInitRequestMeta_descriptor.getNestedTypes().get(0);
    internal_static_trpc_TrpcStreamInitRequestMeta_TransInfoEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_trpc_TrpcStreamInitRequestMeta_TransInfoEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_trpc_TrpcStreamInitResponseMeta_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_trpc_TrpcStreamInitResponseMeta_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_trpc_TrpcStreamInitResponseMeta_descriptor,
        new java.lang.String[] { "Ret", "ErrorMsg", });
    internal_static_trpc_TrpcStreamFeedBackMeta_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_trpc_TrpcStreamFeedBackMeta_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_trpc_TrpcStreamFeedBackMeta_descriptor,
        new java.lang.String[] { "WindowSizeIncrement", });
    internal_static_trpc_TrpcStreamCloseMeta_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_trpc_TrpcStreamCloseMeta_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_trpc_TrpcStreamCloseMeta_descriptor,
        new java.lang.String[] { "CloseType", "Ret", "Msg", "MessageType", "TransInfo", "FuncRet", });
    internal_static_trpc_TrpcStreamCloseMeta_TransInfoEntry_descriptor =
      internal_static_trpc_TrpcStreamCloseMeta_descriptor.getNestedTypes().get(0);
    internal_static_trpc_TrpcStreamCloseMeta_TransInfoEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_trpc_TrpcStreamCloseMeta_TransInfoEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_trpc_RequestProtocol_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_trpc_RequestProtocol_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_trpc_RequestProtocol_descriptor,
        new java.lang.String[] { "Version", "CallType", "RequestId", "Timeout", "Caller", "Callee", "Func", "MessageType", "TransInfo", "ContentType", "ContentEncoding", "AttachmentSize", });
    internal_static_trpc_RequestProtocol_TransInfoEntry_descriptor =
      internal_static_trpc_RequestProtocol_descriptor.getNestedTypes().get(0);
    internal_static_trpc_RequestProtocol_TransInfoEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_trpc_RequestProtocol_TransInfoEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_trpc_ResponseProtocol_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_trpc_ResponseProtocol_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_trpc_ResponseProtocol_descriptor,
        new java.lang.String[] { "Version", "CallType", "RequestId", "Ret", "FuncRet", "ErrorMsg", "MessageType", "TransInfo", "ContentType", "ContentEncoding", "AttachmentSize", });
    internal_static_trpc_ResponseProtocol_TransInfoEntry_descriptor =
      internal_static_trpc_ResponseProtocol_descriptor.getNestedTypes().get(0);
    internal_static_trpc_ResponseProtocol_TransInfoEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_trpc_ResponseProtocol_TransInfoEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
